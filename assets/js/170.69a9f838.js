(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{663:function(t,a,s){"use strict";s.r(a);var e=s(6),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"网站高并发的优化策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网站高并发的优化策略"}},[t._v("#")]),t._v(" 网站高并发的优化策略")]),t._v(" "),s("h4",{attrs:{id:"_1-硬件升级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-硬件升级"}},[t._v("#")]),t._v(" 1.硬件升级")]),t._v(" "),s("p",[t._v("普通的P4服务器一般最多能支持每天10万独立IP，如果访问量比这个还要大， 那么必须首先配置一台更高性能的专用服务器才能解决问题 ，否则怎么优化都不可能彻底解决性能问题。")]),t._v(" "),s("h4",{attrs:{id:"_2-负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-负载均衡"}},[t._v("#")]),t._v(" 2.负载均衡")]),t._v(" "),s("p",[t._v("它是根据某种负载策略把请求分发到集群中的每一台服务器上，让整个服务器群来处理网站的请求。\n公司比较有钱的，可以购买专门负责负载均衡的硬件（如：F5）,效果肯定会很好。对于大部分公司，会选择廉价有效的方法扩展整个系统的架构，来增加服务器的吞吐量和处理能力，以及承载能力。")]),t._v(" "),s("h4",{attrs:{id:"_3-服务器集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-服务器集群"}},[t._v("#")]),t._v(" 3.服务器集群")]),t._v(" "),s("p",[t._v("服务器集群就是指将N台服务器集中起来一起进行同一种服务，它们之间通过网络实现通信。让N台服务器之间相互协作，共同承载一个网站的请求压力。\n在客户端看来就像是只有一个服务器。集群可以利用多个计算机进行并行计算从而获得很高的计算速度，也可以用多个计算机做备份，从而使得任何一个机器坏了整个系统还是能正常运行。")]),t._v(" "),s("h4",{attrs:{id:"_4-数据库读写分离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据库读写分离"}},[t._v("#")]),t._v(" 4.数据库读写分离")]),t._v(" "),s("p",[t._v("基本的原理是让主数据库处理事务性增、改、删操作（INSERT、UPDATE、DELETE），而从数据库处理SELECT查询操作。")]),t._v(" "),s("h4",{attrs:{id:"_5-数据库分表技术-垂直分割-水平分割"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-数据库分表技术-垂直分割-水平分割"}},[t._v("#")]),t._v(" 5.数据库分表技术（垂直分割，水平分割）")]),t._v(" "),s("p",[t._v("当一张的数据达到几百万时，你查询一次所花的时间会变多，如果有联合查询的话，很有可能会死在那儿了。分表的目的就在于此，减小数据库的负担，缩短查询时间。")]),t._v(" "),s("ul",[s("li",[t._v("停机部署法。现在流行的分库分表的中间件有两种，一种是 proxy 形式的，例如 mycat ，是需要额外部署一台服务器的。还有一种是 client 形式的，例如当当出的 Sharding-JDBC ，就是一个jar包，使用起来十分轻便。我个人偏向 Sharding-JDBC ，这种方式，无需额外部署，无其他依赖，DBA也无需改变原有的运维方式。一般步骤是：1）出公告；2）写迁移程序；3）校验迁移前后一致性，在切换到新库。")])]),t._v(" "),s("blockquote",[s("p",[t._v("你刚才刚好有提到分库分表的相关问题，我们当时部署的时候，先停机。然后半夜迁移数据，然后第二天将流量切到新库，这种方案太累，不知道贵公司有没有什么更好的方案？")])]),t._v(" "),s("ul",[s("li",[t._v("双写部署法。主要是对历史数据和新增数据的部署操作，即两个库。")])]),t._v(" "),s("h4",{attrs:{id:"_6-表建立相应的索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-表建立相应的索引"}},[t._v("#")]),t._v(" 6.表建立相应的索引")]),t._v(" "),s("p",[t._v("使用索引可快速访问数据库表中的特定信息。")]),t._v(" "),s("h4",{attrs:{id:"_7-页面静态化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-页面静态化"}},[t._v("#")]),t._v(" 7.页面静态化")]),t._v(" "),s("p",[t._v("前台实现完全的静态化最好，可以完全不用访问数据库。")]),t._v(" "),s("h4",{attrs:{id:"_8-缓存技术-memcache、redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-缓存技术-memcache、redis"}},[t._v("#")]),t._v(" 8.缓存技术（MemCache、Redis）")]),t._v(" "),s("p",[t._v("缓存技术就是另一个解决方案，就是将动态数据存储到缓存文件中，动态网页直接调用 这些文件，而不必再访问数据库")]),t._v(" "),s("h4",{attrs:{id:"_9-禁止外部盗链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-禁止外部盗链"}},[t._v("#")]),t._v(" 9.禁止外部盗链")]),t._v(" "),s("p",[t._v("外部网站的图片或者文件盗链往往会带来大量的负载压力，因此应该严格限制外部对于自身的图片或者文件盗链")]),t._v(" "),s("h4",{attrs:{id:"_10-控制大文件的下载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-控制大文件的下载"}},[t._v("#")]),t._v(" 10.控制大文件的下载")]),t._v(" "),s("p",[t._v("大文件的下载会占用很大的流量，并且对于非SCSI硬盘来说，大量文件下载会消耗 CPU，使得网站响应能力下降。因此，尽量不要提供超过2M的大文件下载，如果需要提供，建议将大文件放在另外一台服务器上。")]),t._v(" "),s("h3",{attrs:{id:"java性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java性能优化"}},[t._v("#")]),t._v(" java性能优化")]),t._v(" "),s("p",[t._v("1、调整GC设置并同时执行性能分析。\n2、正确选择适合的GC算法。\n3、正确合理增加java堆的大小。\n4、关键代码优化。\n5、使用最优的函数。使用StringBuilder代替+操作符；避免使用iterator()；多使用栈带来的好处；避免使用正则表达式,使用Apache Commons Lang作为代替；远离递归.递归会占用大量资源!")]),t._v(" "),s("h3",{attrs:{id:"sql语句优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql语句优化"}},[t._v("#")]),t._v(" SQL语句优化")]),t._v(" "),s("h4",{attrs:{id:"_1、explain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、explain"}},[t._v("#")]),t._v(" 1、EXPLAIN")]),t._v(" "),s("p",[t._v("做MySQL优化，我们要善用EXPLAIN查看SQL执行计划。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("type")]),t._v("列，连接类型。一个好的SQL语句至少要达到 range 级别。杜绝出现all级别。")]),t._v(" "),s("li",[s("code",[t._v("key")]),t._v("列，使用到的索引名。如果没有选择索引，值是NULL。可以采取强制索引方式。")]),t._v(" "),s("li",[s("code",[t._v("key_len")]),t._v("列，索引长度。")]),t._v(" "),s("li",[s("code",[t._v("rows")]),t._v("列，扫描行数。该值是个预估值。")]),t._v(" "),s("li",[s("code",[t._v("extra")]),t._v("列，详细说明。注意，常见的不太友好的值，如下：Using filesort，Using temporary。")])]),t._v(" "),s("h4",{attrs:{id:"_2、sql语句中in包含的值不应过多"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、sql语句中in包含的值不应过多"}},[t._v("#")]),t._v(" 2、SQL语句中IN包含的值不应过多")]),t._v(" "),s("p",[t._v("对于连续的数值，能用between就不要用in了；再或者使用连接来替换。")]),t._v(" "),s("h4",{attrs:{id:"_3、select语句尽量指明字段名称-最好不用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、select语句尽量指明字段名称-最好不用"}},[t._v("#")]),t._v(" 3、SELECT语句尽量指明字段名称，最好不用*")]),t._v(" "),s("h4",{attrs:{id:"_4、当只需要一条数据的时候-使用limit-1-尤其update和delete。-降低写错sql的代价、sql效率很可能更高、避免了长事务、避免数据量大的话-容易把cpu打满"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、当只需要一条数据的时候-使用limit-1-尤其update和delete。-降低写错sql的代价、sql效率很可能更高、避免了长事务、避免数据量大的话-容易把cpu打满"}},[t._v("#")]),t._v(" 4、当只需要一条数据的时候，使用limit 1，尤其update和delete。（降低写错SQL的代价、SQL效率很可能更高、避免了长事务、避免数据量大的话，容易把CPU打满）")]),t._v(" "),s("h4",{attrs:{id:"_5、如果排序字段没有用到索引-就尽量少排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、如果排序字段没有用到索引-就尽量少排序"}},[t._v("#")]),t._v(" 5、如果排序字段没有用到索引，就尽量少排序")]),t._v(" "),s("h4",{attrs:{id:"_6、如果限制条件中其他字段没有索引-尽量少用or"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、如果限制条件中其他字段没有索引-尽量少用or"}},[t._v("#")]),t._v(" 6、如果限制条件中其他字段没有索引，尽量少用or")]),t._v(" "),s("p",[t._v("可使用union all或者是union 来代替。")]),t._v(" "),s("h4",{attrs:{id:"_7、尽量用union-all代替union"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、尽量用union-all代替union"}},[t._v("#")]),t._v(" 7、尽量用union all代替union")]),t._v(" "),s("p",[t._v("union和union all的差异主要是前者需要将结果集合并后再进行唯一性过滤操作，这就会涉及到排序，增加大量的CPU运算，加大资源消耗及延迟。当然，union all的前提条件是两个结果集没有重复数据。")]),t._v(" "),s("h4",{attrs:{id:"_8、不使用order-by-rand"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、不使用order-by-rand"}},[t._v("#")]),t._v(" 8、不使用ORDER BY RAND()")]),t._v(" "),s("h4",{attrs:{id:"_9、区分in和exists、not-in和not-exists"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、区分in和exists、not-in和not-exists"}},[t._v("#")]),t._v(" 9、区分in和exists、not in和not exists")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##下面两句等价")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表A "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表A "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exists")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 表B "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" 表B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("表A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这是性能优化的关键，在于驱动顺序：\n如果是 exists，那么以外层表为驱动表，先被访问；如果是 IN，那么先执行子查询。\n所以，IN 适合于外表大而内表小的情况；EXISTS 适合于外表小而内表大的情况。")]),t._v(" "),s("p",[t._v("关于not in和not exists，推荐使用not exists，不仅仅是效率问题，not in可能存在逻辑问题。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" colname … "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" B表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##上面语句的高效转化结果：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" colname … "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" A表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" B表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("\n")])])]),s("h4",{attrs:{id:"_10、使用合理的分页方式以提高分页的效率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10、使用合理的分页方式以提高分页的效率"}},[t._v("#")]),t._v(" 10、使用合理的分页方式以提高分页的效率")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" product "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("866613")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##转换后的语句（866612代表的是上一页的最大id值）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" product "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("866612")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n")])])]),s("h4",{attrs:{id:"_11、分段查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11、分段查询"}},[t._v("#")]),t._v(" 11、分段查询")]),t._v(" "),s("h4",{attrs:{id:"_12、避免在where子句中对字段进行null值判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12、避免在where子句中对字段进行null值判断"}},[t._v("#")]),t._v(" 12、避免在where子句中对字段进行null值判断")]),t._v(" "),s("p",[t._v("对于null的判断会导致引擎放弃使用索引而进行全表扫描。")]),t._v(" "),s("h4",{attrs:{id:"_13、不建议使用-前缀模糊查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13、不建议使用-前缀模糊查询"}},[t._v("#")]),t._v(" 13、不建议使用%前缀模糊查询")]),t._v(" "),s("p",[t._v("例如"),s("code",[t._v("LIKE“%name”")]),t._v("或者"),s("code",[t._v("LIKE“%name%”")]),t._v("，替换为"),s("code",[t._v("LIKE “name%”")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##如果要完成前缀的模糊查询，可使用全文索引实现")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dynamic_201606"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" FULLTEXT "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("idx_user_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("user_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("fnum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("fdst "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dynamic_201606 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" against"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhangsan'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意：在需要创建全文索引之前，请联系DBA确定能否创建。同时需要注意的是查询语句的写法与普通索引的区别。一般推荐使用elasticsearch来实现全文索引。")])]),t._v(" "),s("h4",{attrs:{id:"_14、避免在where子句中对字段进行表达式操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14、避免在where子句中对字段进行表达式操作"}},[t._v("#")]),t._v(" 14、避免在where子句中对字段进行表达式操作")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("user_project "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" user_base "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##对字段就行了算术运算，会造成引擎放弃使用索引，可改成：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" user_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("user_project "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" user_base "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_15、避免隐式类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15、避免隐式类型转换"}},[t._v("#")]),t._v(" 15、避免隐式类型转换")]),t._v(" "),s("h4",{attrs:{id:"_16、对于联合索引来说-要遵守最左前缀法则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16、对于联合索引来说-要遵守最左前缀法则"}},[t._v("#")]),t._v(" 16、对于联合索引来说，要遵守最左前缀法则")]),t._v(" "),s("h4",{attrs:{id:"_17、必要时可以使用force-index来强制查询走某个索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17、必要时可以使用force-index来强制查询走某个索引"}},[t._v("#")]),t._v(" 17、必要时可以使用force index来强制查询走某个索引")]),t._v(" "),s("h4",{attrs:{id:"_18、注意范围查询语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18、注意范围查询语句"}},[t._v("#")]),t._v(" 18、注意范围查询语句")]),t._v(" "),s("p",[t._v("对于联合索引来说，如果存在范围查询，比如between、>、<等条件时，会造成后面的索引字段失效。")]),t._v(" "),s("h4",{attrs:{id:"_19、关于join优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19、关于join优化"}},[t._v("#")]),t._v(" 19、关于JOIN优化")]),t._v(" "),s("p",[t._v("对于联合查询，使用小表作为驱动表，区分使用LEFT JOIN、RIGHT JOIN 、UNION 和 INNER JOIN")]),t._v(" "),s("h4",{attrs:{id:"_20、设计表时-所有表和字段添加对应注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20、设计表时-所有表和字段添加对应注释"}},[t._v("#")]),t._v(" 20、设计表时，所有表和字段添加对应注释")]),t._v(" "),s("h4",{attrs:{id:"_21、sql书写格式-关键字大小保持一致-使用缩进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21、sql书写格式-关键字大小保持一致-使用缩进"}},[t._v("#")]),t._v(" 21、SQL书写格式，关键字大小保持一致，使用缩进")]),t._v(" "),s("h4",{attrs:{id:"_22、insert语句标明对应的字段名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22、insert语句标明对应的字段名称"}},[t._v("#")]),t._v(" 22、INSERT语句标明对应的字段名称")]),t._v(" "),s("h4",{attrs:{id:"_23、变更sql操作先在测试环境执行-写明详细的操作步骤以及回滚方案-并在上生产前review"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23、变更sql操作先在测试环境执行-写明详细的操作步骤以及回滚方案-并在上生产前review"}},[t._v("#")]),t._v(" 23、变更SQL操作先在测试环境执行，写明详细的操作步骤以及回滚方案，并在上生产前review")]),t._v(" "),s("h4",{attrs:{id:"_24、设计数据库表的时候-加上三个字段-主键-create-time-update-time"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24、设计数据库表的时候-加上三个字段-主键-create-time-update-time"}},[t._v("#")]),t._v(" 24、设计数据库表的时候，加上三个字段：主键，create_time,update_time")]),t._v(" "),s("h4",{attrs:{id:"_25、写完sql语句-检查where-order-by-group-by后面的列-多表关联的列是否已加索引-优先考虑组合索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25、写完sql语句-检查where-order-by-group-by后面的列-多表关联的列是否已加索引-优先考虑组合索引"}},[t._v("#")]),t._v(" 25、写完SQL语句，检查where,order by,group by后面的列，多表关联的列是否已加索引，优先考虑组合索引")]),t._v(" "),s("h4",{attrs:{id:"_26、修改或删除重要数据前-要先备份-先备份-先备份"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26、修改或删除重要数据前-要先备份-先备份-先备份"}},[t._v("#")]),t._v(" 26、修改或删除重要数据前，要先备份，先备份，先备份")]),t._v(" "),s("h4",{attrs:{id:"_27、where后面的字段-留意其数据类型的隐式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27、where后面的字段-留意其数据类型的隐式转换"}},[t._v("#")]),t._v(" 27、where后面的字段，留意其数据类型的隐式转换")]),t._v(" "),s("h4",{attrs:{id:"_28、尽量把所有列定义为not-null。-not-null列更节省空间、null列需要注意空指针问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28、尽量把所有列定义为not-null。-not-null列更节省空间、null列需要注意空指针问题"}},[t._v("#")]),t._v(" 28、尽量把所有列定义为NOT NULL。（NOT NULL列更节省空间、NULL列需要注意空指针问题）")]),t._v(" "),s("h4",{attrs:{id:"_29、修改或者删除sql-先写where查一下-确认后再补充-delete-或-update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29、修改或者删除sql-先写where查一下-确认后再补充-delete-或-update"}},[t._v("#")]),t._v(" 29、修改或者删除SQL，先写WHERE查一下，确认后再补充 delete 或 update")]),t._v(" "),s("h4",{attrs:{id:"_30、所有表必须使用innodb存储引擎。-支持事务-支持行级锁-更好的恢复性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30、所有表必须使用innodb存储引擎。-支持事务-支持行级锁-更好的恢复性"}},[t._v("#")]),t._v(" 30、所有表必须使用Innodb存储引擎。（支持事务，支持行级锁，更好的恢复性）")]),t._v(" "),s("h4",{attrs:{id:"_31、数据库和表的字符集尽量统一使用utf8。-如果需要存储表情-那么选择utf8mb4来进行存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31、数据库和表的字符集尽量统一使用utf8。-如果需要存储表情-那么选择utf8mb4来进行存储"}},[t._v("#")]),t._v(" 31、数据库和表的字符集尽量统一使用UTF8。（如果需要存储表情，那么选择utf8mb4来进行存储）")]),t._v(" "),s("h4",{attrs:{id:"_32、如果修改字段含义或对字段表示的状态追加时-需要及时更新字段注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32、如果修改字段含义或对字段表示的状态追加时-需要及时更新字段注释"}},[t._v("#")]),t._v(" 32、如果修改字段含义或对字段表示的状态追加时，需要及时更新字段注释")]),t._v(" "),s("h4",{attrs:{id:"_33、sql命令行修改数据-养成begin-commit-事务的习惯"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33、sql命令行修改数据-养成begin-commit-事务的习惯"}},[t._v("#")]),t._v(" 33、SQL命令行修改数据，养成begin + commit 事务的习惯")]),t._v(" "),s("h4",{attrs:{id:"_34、索引命名要规范-主键索引名为-pk-字段名-唯一索引名为-uk-字段名-普通索引名则为-idx-字段名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34、索引命名要规范-主键索引名为-pk-字段名-唯一索引名为-uk-字段名-普通索引名则为-idx-字段名"}},[t._v("#")]),t._v(" 34、索引命名要规范，主键索引名为 pk_ 字段名；唯一索引名为 uk _字段名 ；普通索引名则为 idx _字段名")]),t._v(" "),s("h4",{attrs:{id:"_35、where从句中不对列进行函数转换和表达式计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35、where从句中不对列进行函数转换和表达式计算"}},[t._v("#")]),t._v(" 35、WHERE从句中不对列进行函数转换和表达式计算")]),t._v(" "),s("h4",{attrs:{id:"_36、如果修改-更新数据过多-考虑批量进行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36、如果修改-更新数据过多-考虑批量进行"}},[t._v("#")]),t._v(" 36、如果修改/更新数据过多，考虑批量进行")])])}),[],!1,null,null,null);a.default=r.exports}}]);