(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{510:function(t,s,a){"use strict";a.r(s);var e=a(6),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h4",{attrs:{id:"dockerfile-文件组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-文件组成"}},[t._v("#")]),t._v(" Dockerfile 文件组成")]),t._v(" "),a("p",[t._v("Dockerfile 分为四部分："),a("strong",[t._v("基础镜像信息")]),t._v("、"),a("strong",[t._v("维护者信息")]),t._v("、"),a("strong",[t._v("镜像操作指令")]),t._v("、"),a("strong",[t._v("容器启动执行指令")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##  Dockerfile文件格式")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This dockerfile uses the ubuntu image")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# VERSION 2 - EDITION 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Author: docker_user")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Command format: Instruction [arguments / command] ..")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1、第一行必须指定 基础镜像信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ubuntu\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2、维护者信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MAINTAINER")]),t._v(" docker_user docker_user@email.com\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3、镜像操作指令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb http://archive.ubuntu.com/ubuntu/ raring main universe"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" /etc/apt/sources.list\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get update && apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("y nginx\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\ndaemon off;"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" /etc/nginx/nginx.conf\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4、容器启动执行指令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" /usr/sbin/nginx\n")])])]),a("p",[t._v("一开始必须要指明所基于的镜像名称，接下来一般会说明维护者信息；后面则是镜像操作指令，例如 RUN 指令。每执行一条RUN 指令，镜像添加新的一层，并提交；最后是 CMD 指令，来指明运行容器时的操作命令。")]),t._v(" "),a("h4",{attrs:{id:"dockerfile-常用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-常用指令"}},[t._v("#")]),t._v(" Dockerfile 常用指令")]),t._v(" "),a("p",[t._v("一个例子：")]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##  Dockerfile文件格式")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This dockerfile uses the ubuntu image")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# VERSION 2 - EDITION 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Author: docker_user")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Command format: Instruction [arguments / command] ..")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1、第一行必须指定 基础镜像信息。可指定多个FROM")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ubuntu\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2、维护者信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MAINTAINER")]),t._v(" docker_user docker_user@email.com\n\n（下面是可选参数）\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#为镜像添加元数据说明")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# LABEL version="1.0"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#为Docker容器设置对外的端口号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# EXPOSE 8888")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置环境变量JAVA_HOME")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ENV JAVA_HOME /path/to/java ")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3、镜像操作指令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb http://archive.ubuntu.com/ubuntu/ raring main universe"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" /etc/apt/sources.list\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get update && apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("y nginx\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\ndaemon off;"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" /etc/nginx/nginx.conf\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4、容器启动执行指令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" /usr/sbin/nginx\n")])])]),a("p",[t._v("指令集合："),a("code",[t._v("FROM、MAINTAINER、RUN、LABEL、EXPOSE、ENV、ADD、COPY、ENTRYPOINT（启动时执行的命令）、VOLUME（持久化存储数据）、USER（启动容器的用户）、ARG（定义一个变量）")])]),t._v(" "),a("p",[t._v("参考:"),a("a",{attrs:{href:"http://book.itmuch.com/3%20%E4%BD%BF%E7%94%A8Docker%E6%9E%84%E5%BB%BA%E5%BE%AE%E6%9C%8D%E5%8A%A1/3.5%20Docker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("博客"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"使用dockerfile构建docker镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用dockerfile构建docker镜像"}},[t._v("#")]),t._v(" 使用Dockerfile构建Docker镜像")]),t._v(" "),a("p",[t._v("1、使用Maven打包项目 "),a("code",[t._v("mvn clean package")]),t._v("，默认会在target目录下生成对应的jar包文件。")]),t._v(" "),a("p",[t._v("2、与jar包的同级目录，创建文件，命名为Dockerfile。")]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于哪个镜像")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将本地文件夹挂载到当前容器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VOLUME")]),t._v(" /tmp\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拷贝文件到容器，也可以直接写成ADD microservice-discovery-eureka-0.0.1-SNAPSHOT.jar /app.jar")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" microservice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("discovery"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("eureka"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("SNAPSHOT.jar app.jar\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" bash "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'touch /app.jar'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开放8761端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 8761\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置容器启动后执行的命令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-Djava.security.egd=file:/dev/./urandom"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-jar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/app.jar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("3、构建镜像，执行：")]),t._v(" "),a("p",[a("code",[t._v("docker build -t eacdy/test1 .")]),t._v("    ---- 格式："),a("code",[t._v("docker build -t 标签名称 Dockerfile的相对位置")])]),t._v(" "),a("p",[t._v("4、启动镜像："),a("code",[t._v("docker run -p 8761:8761 eacdy/test1")]),t._v("。")]),t._v(" "),a("p",[t._v("5、测试访问http://Docker宿主机IP:8761 ，看是否能正常访问。")]),t._v(" "),a("h5",{attrs:{id:"编写-dockerfile-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写-dockerfile-文件"}},[t._v("#")]),t._v(" 编写 Dockerfile 文件")]),t._v(" "),a("p",[t._v("1、新建.dockerignore 文件，添加（排除不需要打包文件）：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(".git\nnode_modules\nnpm-debug.log\n")])])]),a("p",[t._v("2、新建 DocketFile文件")]),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8.4COPY . /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("registry=https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//registry.npm.taobao.org\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置时区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n    && echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Asia/Shanghai'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("/etc/timezone \\\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 3000\n")])])]),a("div",{staticClass:"language-makefile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-makefile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v("- FROM node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8.4：该 image 文件继承官方的 node image，冒号表示标签，这里标签是8.4，即8.4版本的 node。\n\n- COPY . /app：将当前目录下的所有文件（除了.dockerignore排除的路径），都拷贝进入 image 文件的/app目录。\n\n- WORKDIR /app：指定接下来的工作路径为/app。\n\n- RUN npm install：在/app目录下，运行npm install命令安装依赖。注意，安装后所有的依赖，都将打包进入 image 文件。\n\n- EXPOSE 3000：将容器 3000 端口暴露出来， 允许外部连接这个端口。\n")])])]),a("blockquote",[a("p",[t._v("注：Dockerfile文件不能超过127行")])]),t._v(" "),a("h4",{attrs:{id:"使用maven插件构建docker镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用maven插件构建docker镜像"}},[t._v("#")]),t._v(" 使用Maven插件构建Docker镜像")]),t._v(" "),a("h4",{attrs:{id:"使用腾讯云推送docker镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用腾讯云推送docker镜像"}},[t._v("#")]),t._v(" 使用腾讯云推送docker镜像")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 登录")]),t._v("\n$ sudo docker login "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("username="),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[username]")]),t._v(" ccr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ccs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tencentyun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 打标签")]),t._v("\n$ sudo docker tag "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ImageId]")]),t._v(" ccr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ccs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tencentyun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[namespace]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ImageName]")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("镜像版本号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 上传到腾讯云docker仓库")]),t._v("\n$ sudo docker push ccr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ccs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tencentyun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[namespace]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ImageName]")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("镜像版本号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 下载镜像")]),t._v("\n$ sudo docker pull ccr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ccs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tencentyun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[namespace]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ImageName]")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("镜像版本号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("username：腾讯云账号 ID，开通时已注册，可在 账号信息 页面获取。\nImageId 和镜像版本号：根据已有镜像信息补充。注意标签后的ccr.ccs.tencentyun.com，不可篇，因为采用了腾讯云服务，这是docker必备的用户名。\nnamespace：开通镜像仓库时填写的命名空间。（自定义）\nImageName：在控制台创建的镜像名称(有/my前缀的，忽略前缀)（自定义）")])])])}),[],!1,null,null,null);s.default=n.exports}}]);