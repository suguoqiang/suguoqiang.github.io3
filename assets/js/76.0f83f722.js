(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{571:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("这里的安装为 yum 安装，源码安装方式参见 linux标签 栏目")]),t._v(" "),a("p",[t._v("$ ./configure\n$ make\n$ sudo make install")]),t._v(" "),a("p",[t._v("默认情况下，Nginx 会被安装在 /usr/local/nginx")])]),t._v(" "),a("p",[t._v("Nginx (engine x) 是一款轻量级的Web 服务器 、反向代理服务器及电子邮件（IMAP/POP3）代理服务器。")]),t._v(" "),a("h4",{attrs:{id:"nginx安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx安装"}},[t._v("#")]),t._v(" nginx安装")]),t._v(" "),a("p",[t._v("1、安装")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("$ yum install nginx  \n")])])]),a("p",[t._v("2、启动")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("$ service nginx "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("也可以通过whereis nginx查看，默认启动项存放在第一个目录\n")])])]),a("p",[t._v("3、测试")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("$ wget http:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("127"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1  \n")])])]),t._v(" "),a("p",[t._v("其实，nginx默认是开启的80端口，如果你的IP是公网的，可以直接在浏览器进行访问。\n正常情况选，会出现如下界面："),a("img",{attrs:{src:"http://cdn.gqsu.top/nginx01-1.png",alt:""}})]),t._v(" "),a("p",[t._v("4、自定义，修改配置文件：")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("$ nginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("t     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("查看nginx配置路径\n$ vi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf \n")])])]),a("p",[t._v("修改完成后，保存（由于是yum安装，可以直接调用系统服务service启动）：")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("service nginx restart\n")])])]),a("h4",{attrs:{id:"相关命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关命令"}},[t._v("#")]),t._v(" 相关命令")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("$ nginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#验证配置是否正确")]),t._v("\n\n$ nginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("q   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#测试配置时，只输出错误信息 ")]),t._v("\n\n$ nginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("V   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看Nginx的版本号")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),t._v(" nginx   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动Nginx")]),t._v("\n\n$ nginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s stop   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#快速停止或关闭Nginx")]),t._v("\n\n$ nginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s quit   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#正常停止或关闭Nginx")]),t._v("\n\n$ nginx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s reload     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置文件修改重装载命令")]),t._v("\n")])])]),a("h4",{attrs:{id:"nginx限流策略配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx限流策略配置"}},[t._v("#")]),t._v(" Nginx限流策略配置")]),t._v(" "),a("p",[t._v("Nginx不仅可以做Web服务器、做反向代理、负载均衡，还可以做限流系统。")]),t._v(" "),a("p",[t._v("Nginx使用的限流算法是漏桶算法。\n1、在http块内，配置基础限流配置：")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("http "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("     \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义限流配置mylimit")]),t._v("\n    limit_req_zone"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$binary_remote_addr")]),t._v(" zone=mylimit:10m rate=10r"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义一个服务器接口，这里设置的访问特定资源/test/")]),t._v("\n     server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         location "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#限流配置，同时定义峰值burst，最多接受20个请求，nodelay快速转发，")]),t._v("\n             limit_reqzone=mylimit burst=20 nodelay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n             \n             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#限流系统配置日志级别")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#limit_req_log_level warn;")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#限流响应状态码")]),t._v("\n             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#limit_req_status 429;")]),t._v("\n             \n    \t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实际真实路径")]),t._v("\n             proxy_passhttp:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("backend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("第一个参数，就是键（key），即值$binary_remote_addr所在的位置，它代表的是我们的限流系统限制请求所用的键，代表的是客户端的IP地址的二进制表示（IP地址为键进行限流）。第二个参数是限流配置的共享内存占用（zone），根据实践经验，1MB的空间可以储存16000个IP地址。第三个配置就是访问最大速率（rate），10r/s就是每秒10个请求。")])]),t._v(" "),a("p",[t._v("nginx的快速转发策略：")]),t._v(" "),a("ul",[a("li",[t._v("当在没有超过burst上限的请求数量进入系统时，快速转发，然后将当前桶中可以填充的数量标为0；")]),t._v(" "),a("li",[t._v("按照我们设置的rate在1秒中内缓慢增加桶中余额，以我们的配置为例，每隔1秒，增加10个空位；")]),t._v(" "),a("li",[t._v("在增加空位的过程中，进来超过空位数量的请求，直接拒绝。")])]),t._v(" "),a("p",[t._v("https://docs.nginx.com/nginx/admin-guide/security-controls/controlling-access-proxied-http/")]),t._v(" "),a("h4",{attrs:{id:"nginx匹配策略配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx匹配策略配置"}},[t._v("#")]),t._v(" Nginx匹配策略配置")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ~ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ~* "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ^~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("=")]),t._v("：用于不含正则表达式的 url 前，要求字符串与 url 严格匹配，匹配成功就停止向下搜索并处理请求。、")]),t._v(" "),a("li",[a("code",[t._v("~")]),t._v("：用于表示 url 包含正则表达式，并且区分大小写。")]),t._v(" "),a("li",[a("code",[t._v("~*")]),t._v("：用于表示 url 包含正则表达式，并且不区分大小写。")]),t._v(" "),a("li",[a("code",[t._v("^~")]),t._v("：用于不含正则表达式的 url 前，要求 Nginx 服务器找到表示 url 和字符串匹配度最高的 location 后，立即使用此 location 处理请求，而不再匹配。\n如果有 url 包含正则表达式，不需要有 ~ 开头标识。")])]),t._v(" "),a("h4",{attrs:{id:"nginx-高可用-安装keepalived"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-高可用-安装keepalived"}},[t._v("#")]),t._v(" nginx 高可用，安装Keepalived")]),t._v(" "),a("blockquote",[a("p",[t._v("两台 Nginx 服务器、安装 Keepalived、虚拟 ip")])]),t._v(" "),a("p",[t._v("1、安装")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("$ yum install keepalived "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y\n$ rpm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("q "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a keepalived\nkeepalived"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("5"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("16"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x86_64\n")])])]),a("p",[t._v("2、修改配置文件，虚拟 ip 为 192.168.25.50。粘贴如下代码覆盖默认的 keepalived.conf 文件")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("$ cd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("keepalived\n$ vi keepalived"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf\n")])])]),a("p",[t._v("1）修改master NGINX配置：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("global_defs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   router_id bhz005 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##标识节点的字符串，通常为hostname")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## keepalived会定时执行脚本并且对脚本的执行结果进行分析，动态调整vrrp_instance的优## 先级。这里的权重weight 是与下面的优先级priority有关，如果执行了一次检查脚本成功，## 则权重会-20，也就是由100 - 20变成了80，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Master 的优先级为80 就低于了Backup的优先级90，那么会进行自动的主备切换。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 如果脚本执行结果为0并且weight配置的值大于0，则优先级会相应增加。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 如果脚本执行结果不为0 并且weight配置的值小于0，则优先级会相应减少。")]),t._v("\nvrrp_script chk_nginx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  script "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/local/src/nginx_check.sh"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行脚本位置")]),t._v("\n  interval "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检测时间间隔")]),t._v("\n  weight -20   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果条件成立则权重减20（-20）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 定义虚拟路由 VI_1为自定义标识。")]),t._v("\nvrrp_instance VI_1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    state BACKUP    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主机MASTER、备机BACKUP    ")]),t._v("\n    interface eth6  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（我这里是eth6）")]),t._v("\n    virtual_router_id "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("51")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 虚拟路由ID号")]),t._v("\n    mcast_src_ip "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.172   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 本机ip地址")]),t._v("\n    priority "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 优先级配置（0-254的值）")]),t._v("\n    Nopreempt  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## ")]),t._v("\n    advert_int "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 组播信息发送间隔，俩个节点必须配置一致，默认1s")]),t._v("\n    authentication "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        auth_type PASS\n        auth_pass "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1111")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 真实生产环境下对密码进行匹配")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    track_script "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tchk_nginx\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    virtual_ipaddress "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.170  虚拟ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，可以指定多个\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("2）修改Backup NGINX配置：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('global_defs {\nrouter_id bhz006\n}\n\nvrrp_scriptchk_nginx {\n\tscript "/etc/keepalived/nginx_check.sh"\n\tinterval 2\n\tweight -20\n}\n\nvrrp_instance VI_1 {\n\tstate BACKUP\n\tinterface eth7\n\tvirtual_router_id 173\n\tmcast_src_ip 192.168.1.173\n\tpriority 90 ##优先级配置\n\tadvert_int 1\n\tauthentication {\n\t\tauth_type PASS\n\t\tauth_passbhz\n\t}\n\n\ttrack_script {\n\t\tchk_nginx\n    }\n\n\tvirtual_ipaddress {\n        192.168.1.170\n    }\n}\n')])])]),a("p",[t._v("3）修改nginx_check.sh 脚本，赋予可执行权限："),a("code",[t._v("chmod +x /etc/keepalived/nginx_check.sh")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -C nginx–no-header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$A")]),t._v(" -eq "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    /usr/local/nginx/sbin/nginx\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -C nginx --no-header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" -eq "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" allkeepalived\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("3、启动，访问虚拟 ip 测试是否成功。关闭主机 147 的 Nginx 和 Keepalived，发现仍然可以访问。")]),t._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[t._v("$ systemctl "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),t._v(" keepalived"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service\n")])])]),a("p",[t._v("参考：https://www.cnblogs.com/woniusky/p/11050499.html")])])}),[],!1,null,null,null);s.default=e.exports}}]);