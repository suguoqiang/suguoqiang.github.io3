(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{547:function(t,s,n){"use strict";n.r(s);var a=n(6),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("服务器系统：centOs 7")]),t._v(" "),n("h3",{attrs:{id:"ngix安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ngix安装"}},[t._v("#")]),t._v(" Ngix安装")]),t._v(" "),n("blockquote",[n("p",[t._v("此处的安装为源码安装，yum安装方式参见 nginx标签 栏目，至于区别自行百度。推荐源码安装方式，可以安装最新版本")])]),t._v(" "),n("p",[t._v("1、安装编译工具及库文件、依赖包")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("$ yum install gcc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c+"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n$ yum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y install zlib zlib"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("devel\n$ yum install "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y openssl openssl"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("devel\n")])])]),n("p",[t._v("2、安装PCRE（作用：使Nginx支持rewrite功能）")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("$ yum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y install pcre pcre"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("devel\n")])])]),n("blockquote",[n("p",[t._v("以上两个步骤可以合并："),n("code",[t._v("yum -y install gcc pcre-devel zlib-devel openssl openssl-devel")])])]),t._v(" "),n("p",[t._v("3、下载安装nginx,或者去"),n("a",{attrs:{href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),n("OutboundLink")],1),t._v("下载所需版本")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("wget http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("download"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("19"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gz\n")])])]),t._v(" "),n("p",[t._v("4、解压nginx压缩包并进行编译安装")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("$ cd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n$ tar zxvf nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("19"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gz\n$ cd nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("19"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2\n$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("configure  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("prefix="),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定安装目录（默认）")]),t._v("\n$ make && make install\n")])])]),n("blockquote",[n("p",[t._v("报错make找不到："),n("code",[t._v("yum -y install gcc automake autoconf libtool make")])])]),t._v(" "),n("blockquote",[n("p",[t._v("如果要想在特定的地方定制nginx服务，即配置外放，安装时指定即可：")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#注意 \\ 前面至少一个有空格")]),t._v("\n./configure --sbin-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/nginx "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--conf-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/nginx.conf "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--pid-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/nginx.pid "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--with-http_ssl_module "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--with-pcre"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pcre-8.21 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指向解压的源码目录")]),t._v("\n--with-zlib"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/zlib-1.2.8 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指向解压的源码目录")]),t._v("\n--with-openssl"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/openssl-1.0.1 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指向解压的源码目录")]),t._v("\n--with-http_stub_status_module "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("#启用 nginx 的 NginxStatus 功能，用来监控 Nginx 的当前状态\n--user"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--group"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx\n")])])]),n("blockquote",[n("p",[t._v("分享一个查看yum install安装文件目录的方式："),n("code",[t._v("rpm -qa 查看所有安装包名字，然后 rpm -ql XXXXX")])])]),t._v(" "),n("p",[t._v("补充：nginx目录结构介绍")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("src")]),t._v("：存放Nginx的源代码；")]),t._v(" "),n("li",[n("code",[t._v("man")]),t._v("：存放Nginx的帮助文档；")]),t._v(" "),n("li",[n("code",[t._v("html")]),t._v("：存放默认网站文件；")]),t._v(" "),n("li",[n("code",[t._v("contrib")]),t._v("：存放其他机构或组织贡献的文档资料；")]),t._v(" "),n("li",[n("code",[t._v("conf")]),t._v("：存放Nginx服务器的配置文件；")]),t._v(" "),n("li",[n("code",[t._v("auto")]),t._v("：存放大量的脚本文件，和configure脚本程序相关；")]),t._v(" "),n("li",[n("code",[t._v("configure")]),t._v("：Nginx自动安装脚本，用于检查环境，生成编译代码需要的makefile文件；\n其他目录都是Nginx服务器的相关文档资料；")])]),t._v(" "),n("p",[t._v("5、启动与测试")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("$ cd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("sbin   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#之前的安装目录")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("t    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#检查是否安装成功，成功显示两行信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动")]),t._v("\n")])])]),n("p",[t._v("nginx安装完成后默认会开启80端口，直接访问服务器地址即可：\n"),n("img",{attrs:{src:"http://cdn.gqsu.top/nginx01.png",alt:""}})]),t._v(" "),n("p",[t._v("或者通过"),n("code",[t._v("ps -aux | grep nginx")]),t._v("查看 nginx 的启动进程，及"),n("code",[t._v("netstat -tlnp")]),t._v("查看系统端口号占用")]),t._v(" "),n("p",[t._v("补充：nginx的其他命令：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("./nginx -s stop    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#停止")]),t._v("\n./nginx -s quit    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#杀死")]),t._v("\n./nginx -s reload\n./nginx -s quit:此方式停止步骤是待nginx进程处理任务完毕进行停止。\n./nginx -s stop:此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。\n")])])]),n("p",[t._v("补充：安装 iptables 服务（防火墙）：")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("$ yum install iptables"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("services      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 安装iptables")]),t._v("\n$ systemctl mask firewalld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 下次需要锁定该服务时执行")]),t._v("\n$ systemctl unmask firewalld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 解锁")]),t._v("\n$ systemctl enable iptables"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 在开机时启用服务")]),t._v("\n$ systemctl enable ip6tables"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service\n\n$ systemctl disable firewalld   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 禁止firewalld服务开机启动")]),t._v("\n$ service firewalld "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启")]),t._v("\n$ service firewalld restart     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启")]),t._v("\n$ service firewalld stop        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭")]),t._v("\n\n$ firewall"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set-default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zone=zone   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置默认zone，全部的zone如下：block dmz drop external home internal public trusted work")]),t._v("\n\n$ firewall"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("state    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看防火墙状态")]),t._v("\n\n$ firewall"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ports    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已经放行的端口")]),t._v("\n\n$ firewall"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("all "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看防火墙规则 注意：ssh的22端口默认开启，且不在该列表中")]),t._v("\n\n$ firewall"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zone=public "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("permanent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add-port")]),t._v("=80"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tcp  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开放某个端口 如80")]),t._v("\n\n$ firewall"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("zone=public "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("permanent "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add-port")]),t._v("=10000"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("11000"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tcp  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开放某个范围内的端口 如10000-11000")]),t._v("\n\n$ firewall"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cmd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("reload   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加或移除端口 需重新加载才能生效")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:"http://cdn.gqsu.top/nginx20.png",alt:""}})]),t._v(" "),n("blockquote",[n("p",[t._v("masquerade: no 表示这个区域是否允许 IP 转发，即内部跳转。")])]),t._v(" "),n("p",[t._v("配置端口："),n("code",[t._v("vi /etc/sysconfig/iptables")]),t._v("，添加如下两行：")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("A INPUT "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p tcp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("state NEW "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m tcp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("dport 21 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("j ACCEPT\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("A INPUT "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p tcp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("state NEW "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m tcp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("dport 80 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("j ACCEPT\n")])])]),n("p",[t._v("重启iptables："),n("code",[t._v("systemctl restart iptables.service")]),t._v("，查看端口占用情况："),n("code",[t._v("lsof -i:80")]),t._v("，通过："),n("code",[t._v("kill -9 进程号")]),t._v("杀掉进程")]),t._v(" "),n("p",[t._v("6、设置开机启动（可选）与环境变量（可选）")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("$ vi "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local\n")])])]),n("p",[t._v("增加一行 "),n("code",[t._v("/usr/local/nginx/sbin/nginx")])]),t._v(" "),n("p",[t._v("设置执行权限："),n("code",[t._v("chmod 755 rc.local")])]),t._v(" "),n("p",[t._v("查看当前系统的环境变量位置（"),n("code",[t._v("echo $PATH")]),t._v("），用软连接将 nginx 放入环境变量中，便可以直接快捷启动了")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("$ ln "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("sbin"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("sbin"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx\n")])])]),n("p",[t._v("7、权限配置")]),t._v(" "),n("p",[t._v("(1) 1024以下端口必须用 root 权限启动\n(2) 用非 root 用户启动 nginx，从80端口访问")]),t._v(" "),n("p",[t._v("8、配置 location 映射（参见附录）")]),t._v(" "),n("p",[t._v("9、追加：获取用户请求的IP地址")]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("/conf/")]),t._v("路径，找到"),n("code",[t._v("nginx.conf")]),t._v("配置文件")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#此处配置请求路径，这里为  ' / ',即根路径")]),t._v("\nlocation / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      proxy_set_header Host "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#保留主机信息")]),t._v("\n      proxy_set_header X-Real-IP "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#保留IP信息")]),t._v("\n      proxy_set_header X-Forwarded-For "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      proxy_set_header Remote_Addr "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_true_client_ip")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      proxy_redirect off"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      proxy_pass   http://127.0.0.1:8091/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#请求由谁处理？就在这里配置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"nginx上线维护技巧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx上线维护技巧"}},[t._v("#")]),t._v(" nginx上线维护技巧")]),t._v(" "),n("ul",[n("li",[t._v("1、在 Nginx 配置中禁用 server_tokens 项，不显示版本号，防止恶意攻击。\n在 nginx.conf 中http模块设置 server_tokens off 即可")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.25:80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Server_tokens off"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name tecmintlovesnginx.com www.tecmintlovesnginx.com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    access_log /var/www/logs/tecmintlovesnginx.access.log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    error_log /var/www/logs/tecmintlovesnginx.error.log error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    root /var/www/tecmintlovesnginx.com/public_html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    index index.html index.htm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重启Nginx后生效：")]),t._v("\n")])])]),n("ul",[n("li",[t._v("2、禁止非法的 HTTP User Agents（防止爬虫）。\n新建文件，/etc/nginx/blockuseragents.rules 包含如下内容：")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("map "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$blockedagent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    default "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ~*malicious "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ~*bot "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ~*backdoor "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ~*crawler "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ~*bandit "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#然后将如下语句放入配置文件的server模块内：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include /etc/nginx/blockuseragents.rules;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#并加入if语句设置阻止后进入的页面：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#完整配置如下:")]),t._v("\ninclude /etc/nginx/blockuseragents.rules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nserver "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    if"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$blockedagent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("3、 禁掉不需要的 HTTP 方法，阻止一些欺骗攻击")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_method")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("~ ^"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GET"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("HEAD"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("POST"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("444")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n")])])]),n("ul",[n("li",[t._v("4、设置缓冲区容量上限")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("client_body_buffer_size 1k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nclient_header_buffer_size 1k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nclient_max_body_size 1k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlarge_client_header_buffers "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 1k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置后，不管多少HTTP请求都不会使服务器系统的缓冲区溢出了。")]),t._v("\n")])])]),n("ul",[n("li",[t._v("5、限制最大连接数")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("limit_conn_zone "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$binary_remote_addr")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("zone")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("addr:5m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlimit_conn addr "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("ul",[n("li",[t._v("6、设置日志监控")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" addr /var/www/logs/tecmintlovesnginx.error.log --color"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("auto \n")])])]),n("h3",{attrs:{id:"附录1-常用配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#附录1-常用配置"}},[t._v("#")]),t._v(" 附录1，常用配置")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#运行用户")]),t._v("\nuser nobody"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#就是用浏览器打开时的默认用户，如果文件不可以读取（默认是所有用户）,将其改成一致即可")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动进程,通常设置成和cpu的数量相等")]),t._v("\nworker_processes  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#全局错误日志及PID文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  notice;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  info;")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pid        logs/nginx.pid;")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#工作模式及连接数上限")]),t._v("\nevents "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#epoll是多路复用IO(I/O Multiplexing)中的一种方式,")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#仅用于linux2.6以上内核,可以大大提高nginx的性能")]),t._v("\n    use   epoll"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单个后台worker process进程的最大并发链接数    ")]),t._v("\n    worker_connections  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 并发总数是 worker_processes 和 worker_connections 的乘积")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 即 max_clients = worker_processes * worker_connections")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在设置了反向代理的情况下，max_clients = worker_processes * worker_connections / 4  为什么")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为什么上面反向代理要除以4，应该说是一个经验值")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据以上条件，正常情况下的Nginx Server可以应付的最大连接数为：4 * 8000 = 32000")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# worker_connections 值的设置跟物理内存大小有关")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 因为并发受IO约束，max_clients的值须小于系统可以打开的最大文件数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 而系统可以打开的最大文件数和内存大小成正比，一般1GB内存的机器上可以打开的文件数大约是10万左右")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 我们来看看360M内存的VPS可以打开的文件句柄数是多少：")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $ cat /proc/sys/fs/file-max")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 34336")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 32000 < 34336，即并发连接总数小于系统可以打开的文件句柄总数，这样就在操作系统可以承受的范围之内")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所以，worker_connections 的值需根据 worker_processes 进程数目和系统可以打开的最大文件总数进行适当地进行设置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使得并发总数小于操作系统可以打开的最大文件数目")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其实质也就是根据主机的物理CPU和内存进行配置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当然，理论上的并发总数可能会和实际有所偏差，因为主机还有其他的工作进程需要消耗系统资源。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ulimit -SHn 65535")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\nhttp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定mime类型,类型由mime.type文件定义")]),t._v("\n    include    mime.types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    default_type  application/octet-stream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定日志格式")]),t._v("\n    log_format  main  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),t._v(" - "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_user")]),t._v(" ["),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local")]),t._v('] "'),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),t._v("\" '")]),t._v("\n                      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(' "'),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_referer")]),t._v("\" '")]),t._v("\n                      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\""),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v('" "'),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_x_forwarded_for")]),t._v("\"'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    access_log  logs/access.log  main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果取消日志记录 access_log off;")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对于普通应用，必须设为 on,")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以平衡磁盘与网络I/O处理速度，降低系统的uptime.")]),t._v("\n    sendfile     on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#tcp_nopush     on;")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接超时时间")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#keepalive_timeout  0;")]),t._v("\n    keepalive_timeout  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    tcp_nodelay     on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启gzip压缩")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("gzip")]),t._v("  on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    gzip_disable "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MSIE [1-6]."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定请求缓冲")]),t._v("\n    client_header_buffer_size    128k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    large_client_header_buffers  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 128k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以下server可包含文件夹下的配置文件")]),t._v("\n　  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include conf.d/*.conf;")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定虚拟主机配置")]),t._v("\n    server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#侦听80端口")]),t._v("\n        listen    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义使用 www.nginx.cn访问")]),t._v("\n        server_name  www.nginx.cn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义服务器的默认网站根目录位置")]),t._v("\n        root html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定本虚拟主机的访问日志")]),t._v("\n        access_log  logs/nginx.access.log  main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认请求(映射，可配置成浏览器访问)")]),t._v("\n        location / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义映射的路径（还有一种是alias，这里不做详讨）")]),t._v("\n            root  /home/jit/education_app/resource/IA-Images"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义首页索引文件的名称")]),t._v("\n            index index.php index.html index.htm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启目录浏览功能(开启该功能后，index.html不可以存在，否则读出来的是页面)")]),t._v("\n            autoindex on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示出文件的确切大小")]),t._v("\n            autoindex_exact_size off"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示的文件时间为文件的服务器时间")]),t._v("\n            autoindex_localtime on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义错误提示页面")]),t._v("\n        error_page   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v(" /50x.html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#静态文件，nginx自己处理")]),t._v("\n        location ~ ^/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("javascript"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("js"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("css"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("flash"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("media"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("static"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#过期30天，静态文件不怎么更新，过期可以设大一点，")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果频繁更新，则可以设置得小一点。")]),t._v("\n            expires 30d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.")]),t._v("\n        location ~ .php$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            fastcgi_pass "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:9000"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            fastcgi_index index.php"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            fastcgi_param  SCRIPT_FILENAME  "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$document_root")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fastcgi_script_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            include fastcgi_params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对以“mp3或exe”结尾的地址进行负载均衡")]),t._v("\n        location ~* "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mp3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("exe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置被代理服务器的端口或套接字，以及URL")]),t._v("\n            proxy_pass http://img_relay"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            proxy_set_header Host "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header X-Real-IP "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header X-Forwarded-For "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以上三行，目的是将代理服务器收到的用户的信息传到真实服务器上")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#禁止访问 .htxxx 文件")]),t._v("\n        location ~ /.ht "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            deny all"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#黑名单")]),t._v("\n        location / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            deny  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t    deny "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.0/24"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            allow "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.1")]),t._v(".1.0/16"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            allow "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2001")]),t._v(":0db8::/32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            deny  all"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("配置完后，进入nginx安装目录（"),n("code",[t._v("./sbin/nginx")]),t._v("），找不到可以输入"),n("code",[t._v("whereis ngingx")]),t._v("进行范围查找；进入安装目录后，可以"),n("code",[t._v("pkill nginx")]),t._v("杀死改进程，然后在nginx启动。为了确保启动正常，可以"),n("code",[t._v("lsof -i:端口号")]),t._v("，看端口是否被占用。")]),t._v(" "),n("p",[t._v("以上操作都正确后，如果还不能访问，可以 telnet 一下端口，看端口是否启动正常，如不能telnet，可能是防火墙问题，需开放该端口。")]),t._v(" "),n("h3",{attrs:{id:"附录2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#附录2"}},[t._v("#")]),t._v(" 附录2")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("######Nginx配置文件nginx.conf中文详解#####")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义Nginx运行的用户和用户组")]),t._v("\nuser www www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx进程数，建议设置为等于CPU总核心数。")]),t._v("\nworker_processes "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]")]),t._v("\nerror_log /usr/local/nginx/logs/error.log info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进程pid文件")]),t._v("\npid /usr/local/nginx/logs/nginx.pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定进程可以打开的最大描述符：数目")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#工作模式与连接数上限")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这个指令是指当一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n 的值保持一致。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#现在在linux 2.6内核下开启文件打开数为65535，worker_rlimit_nofile就相应应该填写65535。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这是因为nginx调度时分配请求到进程并不是那么的均衡，所以假如填写10240，总并发量达到3-4万时就有进程可能超过10240了，这时会返回502错误。")]),t._v("\nworker_rlimit_nofile "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65535")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nevents\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; epoll模型")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是Linux 2.6以上版本内核中的高性能网络I/O模型，linux建议epoll，如果跑在FreeBSD上面，就用kqueue模型。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#补充说明：")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#与apache相类，nginx针对不同的操作系统，有不同的事件模型")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#A）标准事件模型")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Select、poll属于标准事件模型，如果当前系统不存在更有效的方法，nginx会选择select或poll")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#B）高效事件模型")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Kqueue：使用于FreeBSD 4.1+, OpenBSD 2.9+, NetBSD 2.0 和 MacOS X.使用双处理器的MacOS X系统使用kqueue可能会造成内核崩溃。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Epoll：使用于Linux内核2.6版本及以后的系统。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/dev/poll：使用于Solaris 7 11/99+，HP/UX 11.22+ (eventport)，IRIX 6.5.15+ 和 Tru64 UNIX 5.1A+。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Eventport：使用于Solaris 10。 为了防止出现内核崩溃的问题， 有必要安装安全补丁。")]),t._v("\n    use epoll"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单个进程最大连接数（最大连接数=连接数*进程数）")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#根据硬件调整，和前面工作进程配合起来用，尽量大，但是别把cpu跑到100%就行。每个进程允许的最多连接数，理论上每台nginx服务器的最大连接数为。")]),t._v("\n    worker_connections "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65535")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#keepalive超时时间。")]),t._v("\n    keepalive_timeout "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#客户端请求头部的缓冲区大小。这个可以根据你的系统分页大小来设置，一般一个请求头的大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#分页大小可以用命令getconf PAGESIZE 取得。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#[root@web001 ~]# getconf PAGESIZE")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4096")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#但也有client_header_buffer_size超过4k的情况，但是client_header_buffer_size该值必须设置为“系统分页大小”的整倍数。")]),t._v("\n    client_header_buffer_size 4k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这个将为打开文件指定缓存，默认是没有启用的，max指定缓存数量，建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存。")]),t._v("\n    open_file_cache "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65535")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("inactive")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("60s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这个是指多长时间检查一次缓存的有效信息。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#语法:open_file_cache_valid time 默认值:open_file_cache_valid 60 使用字段:http, server, location 这个指令指定了何时需要检查open_file_cache中缓存项目的有效信息.")]),t._v("\n    open_file_cache_valid 80s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#open_file_cache指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive时间内一次没被使用，它将被移除。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#语法:open_file_cache_min_uses number 默认值:open_file_cache_min_uses 1 使用字段:http, server, location  这个指令指定了在open_file_cache指令无效的参数中一定的时间范围内可以使用的最小文件数,如果使用更大的值,文件描述符在cache中总是打开状态.")]),t._v("\n    open_file_cache_min_uses "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#语法:open_file_cache_errors on | off 默认值:open_file_cache_errors off 使用字段:http, server, location 这个指令指定是否在搜索一个文件是记录cache错误.")]),t._v("\n    open_file_cache_errors on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定http服务器，利用它的反向代理功能提供负载均衡支持")]),t._v("\nhttp\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#文件扩展名与文件类型映射表")]),t._v("\n    include mime.types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认文件类型")]),t._v("\n    default_type application/octet-stream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认编码")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset utf-8;")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#服务器名字的hash表大小")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#保存服务器名字的hash表是由指令server_names_hash_max_size 和server_names_hash_bucket_size所控制的。参数hash bucket size总是等于hash表的大小，并且是一路处理器缓存大小的倍数。在减少了在内存中的存取次数后，使在处理器中加速查找hash表键值成为可能。如果hash bucket size等于一路处理器缓存的大小，那么在查找键的时候，最坏的情况下在内存中查找的次数为2。第一次是确定存储单元的地址，第二次是在存储单元中查找键 值。因此，如果Nginx给出需要增大hash max size 或 hash bucket size的提示，那么首要的是增大前一个参数的大小.")]),t._v("\n    server_names_hash_bucket_size "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#客户端请求头部的缓冲区大小。这个可以根据你的系统分页大小来设置，一般一个请求的头部大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE取得。")]),t._v("\n    client_header_buffer_size 32k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#客户请求头缓冲大小。nginx默认会用client_header_buffer_size这个buffer来读取header值，如果header过大，它会使用large_client_header_buffers来读取。")]),t._v("\n    large_client_header_buffers "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 64k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定通过nginx上传文件的大小")]),t._v("\n    client_max_body_size 8m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启高效文件传输模式，sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成off。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sendfile指令指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime。")]),t._v("\n    sendfile on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启目录列表访问，合适下载服务器，默认关闭。")]),t._v("\n    autoindex on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#此选项允许或禁止使用socke的TCP_CORK的选项，此选项仅在使用sendfile的时候使用")]),t._v("\n    tcp_nopush on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     \n    tcp_nodelay on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#长连接超时时间，单位是秒")]),t._v("\n    keepalive_timeout "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。")]),t._v("\n    fastcgi_connect_timeout "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fastcgi_send_timeout "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fastcgi_read_timeout "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fastcgi_buffer_size 64k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fastcgi_buffers "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 64k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fastcgi_busy_buffers_size 128k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fastcgi_temp_file_write_size 128k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip模块设置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("gzip")]),t._v(" on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启gzip压缩输出")]),t._v("\n    gzip_min_length 1k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最小压缩文件大小")]),t._v("\n    gzip_buffers "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 16k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩缓冲区")]),t._v("\n    gzip_http_version "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩版本（默认1.1，前端如果是squid2.5请使用1.0）")]),t._v("\n    gzip_comp_level "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩等级")]),t._v("\n    gzip_types text/plain application/x-javascript text/css application/xml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩类型，默认就已经包含textml，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。")]),t._v("\n    gzip_vary on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启限制IP连接数的时候需要使用")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#limit_zone crawler $binary_remote_addr 10m;")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#负载均衡配置")]),t._v("\n    upstream piao.jd.com "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。")]),t._v("\n        server "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".80.121:80 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("weight")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".80.122:80 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("weight")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".80.123:80 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("weight")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx的upstream目前支持4种方式的分配")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、轮询（默认）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、weight")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#例如：")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream bakend {")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 192.168.0.14 weight=10;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 192.168.0.15 weight=10;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、ip_hash")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#例如：")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream bakend {")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ip_hash;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 192.168.0.14:88;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 192.168.0.15:80;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、fair（第三方）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#按后端服务器的响应时间来分配请求，响应时间短的优先分配。")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream backend {")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server server1;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server server2;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    fair;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4、url_hash（第三方）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#例：在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream backend {")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server squid1:3128;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server squid2:3128;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    hash $request_uri;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    hash_method crc32;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#tips:")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream bakend{#定义负载均衡设备的Ip及设备状态}{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ip_hash;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 127.0.0.1:9090 down;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 127.0.0.1:8080 weight=2;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 127.0.0.1:6060;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server 127.0.0.1:7070 backup;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在需要使用负载均衡的server中增加 proxy_pass http://bakend/;")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#每个设备的状态设置为:")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1.down表示单前的server暂时不参与负载")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2.weight为weight越大，负载的权重就越大。")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3.max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream模块定义的错误")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4.fail_timeout:max_fails次失败后，暂停的时间。")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5.backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx支持同时设置多组的负载均衡，用来给不用的server来使用。")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#client_body_in_file_only设置为On 可以讲client post过来的数据记录到文件中用来做debug")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#client_body_temp_path设置记录文件的目录 可以设置最多3层目录")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location对URL进行匹配.可以进行重定向或者进行新的代理 负载均衡")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     \n     \n     \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#虚拟主机的配置")]),t._v("\n    server\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听端口")]),t._v("\n        listen "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#域名可以有多个，用空格隔开")]),t._v("\n        server_name www.jd.com jd.com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        index index.html index.htm index.php"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        root /data/www/jd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对******进行负载均衡")]),t._v("\n        location ~ .*."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("php"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("php5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("?$\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            fastcgi_pass "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:9000"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            fastcgi_index index.php"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            include fastcgi.conf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#图片缓存时间设置")]),t._v("\n        location ~ .*."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpg"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpeg"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("png"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("bmp"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("swf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            expires 10d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#JS和CSS缓存时间设置")]),t._v("\n        location ~ .*."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("js"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("css"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("?$\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            expires 1h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#日志格式设定")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$remote_addr与$http_x_forwarded_for用以记录客户端的ip地址；")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$remote_user：用来记录客户端用户名称；")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$time_local： 用来记录访问时间与时区；")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$request： 用来记录请求的url与http协议；")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$status： 用来记录请求状态；成功是200，")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$body_bytes_sent ：记录发送给客户端文件主体内容大小；")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$http_referer：用来记录从那个页面链接访问过来的；")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$http_user_agent：记录客户浏览器的相关信息；")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#通常web服务器放在反向代理的后面，这样就不能获取到客户的IP地址了，通过$remote_addr拿到的IP地址是反向代理服务器的iP地址。反向代理服务器在转发请求的http头信息中，可以增加x_forwarded_for信息，用以记录原有客户端的IP地址和原来客户端的请求的服务器地址。")]),t._v("\n        log_format access "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),t._v(" - "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_user")]),t._v(" ["),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local")]),t._v('] "'),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),t._v("\" '")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(' "'),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_referer")]),t._v("\" '")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\""),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v('" '),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_x_forwarded_for")]),t._v("'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义本虚拟主机的访问日志")]),t._v("\n        access_log  /usr/local/nginx/logs/host.access.log  main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        access_log  /usr/local/nginx/logs/host.access.404.log  log404"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#对 "/" 启用反向代理')]),t._v("\n        location / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_pass http://127.0.0.1:88"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_redirect off"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header X-Real-IP "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n             \n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP")]),t._v("\n            proxy_set_header X-Forwarded-For "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n             \n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以下是一些反向代理的配置，可选。")]),t._v("\n            proxy_set_header Host "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#允许客户端请求的最大单文件字节数")]),t._v("\n            client_max_body_size 10m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#缓冲区代理缓冲用户端请求的最大字节数，")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果把它设置为比较大的数值，例如256k，那么，无论使用firefox还是IE浏览器，来提交任意小于256k的图片，都很正常。如果注释该指令，使用默认的client_body_buffer_size设置，也就是操作系统页面大小的两倍，8k或者16k，问题就出现了。")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#无论使用firefox4.0还是IE8.0，提交一个比较大，200k左右的图片，都返回500 Internal Server Error错误")]),t._v("\n            client_body_buffer_size 128k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#表示使nginx阻止HTTP应答代码为400或者更高的应答。")]),t._v("\n            proxy_intercept_errors on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端服务器连接的超时时间_发起握手等候响应超时时间")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx跟后端服务器连接超时时间(代理连接超时)")]),t._v("\n            proxy_connect_timeout "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端服务器数据回传时间(代理发送超时)")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端服务器数据回传时间_就是在规定时间之内后端服务器必须传完所有的数据")]),t._v("\n            proxy_send_timeout "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接成功后，后端服务器响应时间(代理接收超时)")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接成功后_等候后端服务器响应时间_其实已经进入后端的排队之中等候处理（也可以说是后端服务器处理请求的时间）")]),t._v("\n            proxy_read_timeout "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置代理服务器（nginx）保存用户头信息的缓冲区大小")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置从被代理服务器读取的第一部分应答的缓冲区大小，通常情况下这部分应答中包含一个小的应答头，默认情况下这个值的大小为指令proxy_buffers中指定的一个缓冲区的大小，不过可以将其设置为更小")]),t._v("\n            proxy_buffer_size 4k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_buffers缓冲区，网页平均在32k以下的设置")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置用于读取应答（来自被代理服务器）的缓冲区数目和大小，默认情况也为分页大小，根据操作系统的不同可能是4k或者8k")]),t._v("\n            proxy_buffers "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 32k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#高负荷下缓冲大小（proxy_buffers*2）")]),t._v("\n            proxy_busy_buffers_size 64k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置在写入proxy_temp_path时数据的大小，预防一个工作进程在传递文件时阻塞太长")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定缓存文件夹大小，大于这个值，将从upstream服务器传")]),t._v("\n            proxy_temp_file_write_size 64k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         \n         \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定查看Nginx状态的地址")]),t._v("\n        location /NginxStatus "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            stub_status on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            access_log on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            auth_basic "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NginxStatus"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            auth_basic_user_file confpasswd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#htpasswd文件的内容可以用apache提供的htpasswd工具来产生。")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#本地动静分离反向代理配置")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#所有jsp的页面均交由tomcat或resin处理")]),t._v("\n        location ~ ."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsp"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jspx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("?$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_set_header Host "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header X-Real-IP "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header X-Forwarded-For "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_pass http://127.0.0.1:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#所有静态文件由nginx直接读取不经过tomcat或resin")]),t._v("\n        location ~ .*."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("htm"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("gif"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpg"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpeg"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("png"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("bmp"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("swf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ioc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rar")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("txt"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("flv"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("mid"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("doc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ppt"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n        pdf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("xls"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("mp3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("wma"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            expires 15d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n         \n        location ~ .*."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("js"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("css"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("?$\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            expires 1h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("######Nginx配置文件nginx.conf中文详解#####")]),t._v("\n")])])]),n("p",[t._v("更多配置：1、根据Cookie实现灰度发布；2.根据来路IP实现灰度发布；3.更细粒度灰度发布。")])])}),[],!1,null,null,null);s.default=e.exports}}]);