(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{573:function(t,s,n){"use strict";n.r(s);var a=n(6),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h4",{attrs:{id:"nginx的基本配置nginx-conf"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx的基本配置nginx-conf"}},[t._v("#")]),t._v(" nginx的基本配置nginx.conf")]),t._v(" "),n("blockquote",[n("p",[t._v("在config目录下的.conf文件的配置，优先级是先加载的，即后加载的重复配置不会覆盖前面的。")])]),t._v(" "),n("h5",{attrs:{id:"基本组成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本组成"}},[t._v("#")]),t._v(" 基本组成")]),t._v(" "),n("p",[t._v("先贴一张常用设置：")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#运行用户")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#user somebody;")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动进程,通常设置成和cpu的数量相等")]),t._v("\nworker_processes  1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#全局错误日志")]),t._v("\nerror_log  D:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Tools"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("logs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nerror_log  D:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Tools"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("logs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("notice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log  notice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nerror_log  D:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Tools"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("logs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log  info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#PID文件，记录当前启动的nginx的进程ID")]),t._v("\npid        D:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Tools"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("logs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#工作模式及连接数上限")]),t._v("\nevents "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   worker_connections 1024"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单个后台worker process进程的最大并发链接数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定http服务器，利用它的反向代理功能提供负载均衡支持")]),t._v("\nhttp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定mime类型(邮件支持类型),类型由mime.types文件定义")]),t._v("\n   include       D:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Tools"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   default_type  application"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("octet"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("stream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定日志")]),t._v("\n   log_format  main  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[$remote_addr] - [$remote_user] [$time_local] \"$request\" '")]),t._v("\n                     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$status $body_bytes_sent \"$http_referer\" '")]),t._v("\n                     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"$http_user_agent" "$http_x_forwarded_for"\'')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                     \n   access_log    D:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Tools"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("logs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("access"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   rewrite_log     on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.")]),t._v("\n   sendfile        on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#tcp_nopush     on;")]),t._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接超时时间")]),t._v("\n   keepalive_timeout  120"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   tcp_nodelay        on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip压缩开关")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip  on;")]),t._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定实际的服务器列表,之后本地的localhost就为zp_server1")]),t._v("\n   upstream zp_server1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       server 127"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:8089"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       server 127"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:8088"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       server 127"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:8087"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#HTTP服务器")]),t._v("\n   server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听80端口，80端口是知名端口号，用于HTTP协议")]),t._v("\n       listen       80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义使用www.xx.com访问")]),t._v("\n       server_name  www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("helloworld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#首页")]),t._v("\n       index index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html\n       \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指向webapp的目录")]),t._v("\n       root D:_WorkspaceProjectgithubzpSpringNotesspring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("securityspring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("shirosrcmainwebapp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#编码格式")]),t._v("\n       charset utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#代理配置参数")]),t._v("\n       proxy_connect_timeout 180"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       proxy_send_timeout 180"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       proxy_read_timeout 180"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       proxy_set_header Host "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       proxy_set_header X"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Forwarder"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_redirect default;")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_buffer_size 32k;")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_buffering on;")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_buffers 4 128k;")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_busy_buffers_size 256k;")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_max_temp_file_size 256k;")]),t._v("\n\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#反向代理的路径（和upstream绑定），location 后面设置映射的路径")]),t._v("\n       location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           proxy_pass http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("zp_server1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#静态文件，nginx自己处理")]),t._v("\n       location ~ ^"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("javascript"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("js"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("css"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("flash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("media"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("static"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           root D:_WorkspaceProjectgithubzpSpringNotesspring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("securityspring"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("shirosrcmainwebappiews"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。")]),t._v("\n           expires 30d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定查看Nginx状态的地址")]),t._v("\n       location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("NginxStatus "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           stub_status           on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           access_log            on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           auth_basic            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NginxStatus"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           auth_basic_user_file  conf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("htpasswd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#禁止访问 .htxxx 文件")]),t._v("\n       location ~ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ht "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           deny all"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n       \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#错误处理页面（可选择性配置）")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_page   404              /404.html;")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_page   500 502 503 504  /50x.html;")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location = /50x.html {")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    root   html;")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("配置文件主要由四部分组成：\nmain(全区设置)，server(主机配置)，upstream(负载均衡服务器设置)，和location(URL匹配特定位置设置)")]),t._v(" "),n("h5",{attrs:{id:"_1、全局配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、全局配置"}},[t._v("#")]),t._v(" 1、全局配置")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx的worker进程运行用户以及用户组")]),t._v("\nuser nobody"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#就是用浏览器打开时的默认用户，如果文件不可以读取（默认访问是其他用户读取）,将其改成一致即可")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动进程，值越大，并发处理线程越多（受硬件和软件制约，通常设置成和cpu的数量相等）")]),t._v("\nworker_processes  1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#worker_processes auto;")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以下参数指定了哪个cpu分配给哪个进程，一般来说不用特殊指定。如果一定要设的话，用0和1指定分配方式.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这样设就是给1-4个进程分配单独的核来运行，出现第5个进程是就是随机分配了。eg:")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#worker_processes 4     #4核CPU ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#worker_cpu_affinity 0001 0010 0100 1000")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义全局错误日志定义类型，[debug|info|notice|warn|crit]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/notice.log  notice;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/info.log  info;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定进程ID存储文件位置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pid        logs/nginx.pid;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n的值保持一致。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#vim /etc/security/limits.conf")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  *                soft    nproc          65535")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  *                hard    nproc          65535")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  *                soft    nofile         65535")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  *                hard    nofile         65535")]),t._v("\n")])])]),n("h5",{attrs:{id:"_2、事件配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、事件配置"}},[t._v("#")]),t._v(" 2、事件配置")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#工作模式及连接数上限")]),t._v("\nevents "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#use [ kqueue | rtsig | epoll | /dev/poll | select | poll ] 是多路复用IO(I/O Multiplexing)中的方式")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#epoll 仅用于linux2.6以上内核,可以大大提高nginx的性能")]),t._v("\n    use   epoll"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单个后台worker process进程的最大并发链接数  ")]),t._v("\n    worker_connections  1024"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 并发总数是 worker_processes 和 worker_connections 的乘积")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 即 max_clients = worker_processes * worker_connections")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在设置了反向代理的情况下，max_clients = worker_processes * worker_connections / 4  为什么")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为什么上面反向代理要除以4，应该说是一个经验值")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据以上条件，正常情况下的Nginx Server可以应付的最大连接数为：4 * 8000 = 32000")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# worker_connections 值的设置跟物理内存大小有关")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 因为并发受IO约束，max_clients的值须小于系统可以打开的最大文件数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 而系统可以打开的最大文件数和内存大小成正比，一般1GB内存的机器上可以打开的文件数大约是10万左右")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 我们来看看360M内存的VPS可以打开的文件句柄数是多少：")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $ cat /proc/sys/fs/file-max")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 34336")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 32000 < 34336，即并发连接总数小于系统可以打开的文件句柄总数，这样就在操作系统可以承受的范围之内")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所以，worker_connections 的值需根据 worker_processes 进程数目和系统可以打开的最大文件总数进行适当地进行设置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使得并发总数小于操作系统可以打开的最大文件数目")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其实质也就是根据主机的物理CPU和内存进行配置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当然，理论上的并发总数可能会和实际有所偏差，因为主机还有其他的工作进程需要消耗系统资源。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ulimit -SHn 65535")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h5",{attrs:{id:"_3、服务器设置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、服务器设置"}},[t._v("#")]),t._v(" 3、服务器设置")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("http "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定mime类型(邮件支持类型),类型由同步目录下的mime.types文件定义")]),t._v("\n    include    mime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认文件类型")]),t._v("\n    default_type  application"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("octet"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("stream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定日志格式")]),t._v("\n    log_format  main  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n                      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$status $body_bytes_sent \"$http_referer\" '")]),t._v("\n                      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"$http_user_agent" "$http_x_forwarded_for"\'')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义日志的格式。后面定义要输出的内容。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1.$remote_addr 与$http_x_forwarded_for 用以记录客户端的ip地址；")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2.$remote_user ：用来记录客户端用户名称；")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3.$time_local ：用来记录访问时间与时区；")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4.$request  ：用来记录请求的url与http协议；")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5.$status ：用来记录请求状态； ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6.$body_bytes_sent ：记录发送给客户端文件主体内容大小；")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#7.$http_referer ：用来记录从那个页面链接访问过来的；")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#8.$http_user_agent ：记录客户端浏览器的相关信息")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接日志的路径")]),t._v("\n    access_log  logs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("access"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log  main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#rewrite_log     on;")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只记录更为严重的错误日志，减少IO压力")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log logs/error.log crit;")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#关闭日志")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  off;")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认编码")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset utf-8;")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#服务器名字的hash表大小")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server_names_hash_bucket_size 128;")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对于普通应用，必须设为 on,")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.")]),t._v("\n    sendfile   on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#防止网络阻塞,设置连接超时时间")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#tcp_nopush    on;")]),t._v("\n    keepalive_timeout  120"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    tcp_nodelay    on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接超时时间，单位是秒")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#keepalive_timeout  0;")]),t._v("\n    keepalive_timeout  65"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#客户端请求头读取超时时间")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#client_header_timeout 10;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置客户端请求主体读取超时时间")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#client_body_timeout 10;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#响应客户端超时时间")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#send_timeout 10;")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip模块设置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启gzip压缩输出")]),t._v("\n    gzip on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最小压缩文件大小")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip_min_length 1k; ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩缓冲区")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip_buffers 4 16k;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩版本（默认1.1，前端如果是squid2.5请使用1.0）")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip_http_version 1.0;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩等级 1-9 等级越高，压缩效果越好，节约宽带，但CPU消耗大")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip_comp_level 2;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#压缩类型，默认就已经包含text/html，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip_types text/plain application/x-javascript text/css application/xml;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#前端缓存服务器缓存经过压缩的页面")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip_vary on;")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定请求缓冲")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#客户端请求单个文件的最大字节数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#client_max_body_size 8m;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定来自客户端请求头的hearerbuffer大小")]),t._v("\n    client_header_buffer_size    128k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定客户端请求中较大的消息头的缓存最大数量和大小。")]),t._v("\n    large_client_header_buffers  4 128k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fastcgi_connect_timeout 300;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fastcgi_send_timeout 300;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fastcgi_read_timeout 300;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fastcgi_buffer_size 64k;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fastcgi_buffers 4 64k;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fastcgi_busy_buffers_size 128k;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fastcgi_temp_file_write_size 128k;")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以下server可包含文件夹下的配置文件")]),t._v("\n　  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include conf.d/*.conf;")]),t._v("\n")])])]),n("h5",{attrs:{id:"_4、虚拟主机基本设置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、虚拟主机基本设置"}},[t._v("#")]),t._v(" 4、虚拟主机基本设置")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定虚拟主机配置")]),t._v("\n    server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#侦听端口")]),t._v("\n        listen    80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问域名。可以有多个，用空格隔开")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server_name www.jd.com jd.com;")]),t._v("\n        server_name  www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#编码格式，若网页格式与此不同，将被自动转码")]),t._v("\n        charset utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义服务器的默认网站根文件（下面定义的路径的前缀都为/etc/nginx/html下index.html文件）")]),t._v("\n        root html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定本虚拟主机的访问日志")]),t._v("\n        access_log  logs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("access"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log  main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认配置")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location / {")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    root   /usr/share/nginx/html;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    index  index.html index.htm;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认请求(映射，可配置成浏览器访问)")]),t._v("\n        location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义映射的路径（还有一种是alias，这里不做详讨）")]),t._v("\n            root  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("jit"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("education_app"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("resource"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("IA"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Images"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义首页索引文件的名称。以下按顺序匹配")]),t._v("\n            index index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("php index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启目录浏览功能")]),t._v("\n            autoindex on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示出文件的确切大小")]),t._v("\n            autoindex_exact_size off"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示的文件时间为文件的服务器时间")]),t._v("\n            autoindex_localtime on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义错误提示页面")]),t._v("\n        error_page   500 502 503 504 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("50x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location = "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("50x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#静态文件，nginx自己处理")]),t._v("\n        location ~ ^"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("javascript"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("js"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("css"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("flash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("media"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("static"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#过期30天，静态文件不怎么更新，过期可以设大一点，")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果频繁更新，则可以设置得小一点。")]),t._v("\n            expires 30d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.")]),t._v("\n        location ~ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("php$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            fastcgi_pass 127"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1:9000"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            fastcgi_index index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("php"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            fastcgi_param  SCRIPT_FILENAME  "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$document_root")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fastcgi_script_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            include fastcgi_params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#禁止访问 .htxxx 文件")]),t._v("\n        location ~ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ht "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            deny all"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#HTTPS虚拟主机定义")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTPS server")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server {")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    listen       443 ssl;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server_name  localhost;")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ssl证书文件位置(常见证书文件格式为：crt/pem)")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_certificate      cert.pem;")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ssl证书key位置")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_certificate_key  cert.key;")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ssl配置参数（选择性配置）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_session_cache    shared:SSL:1m;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_session_timeout  5m;")]),t._v("\n         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#数字签名，此处使用MD5")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_ciphers  HIGH:!aNULL:!MD5;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_prefer_server_ciphers  on;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    location / {")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        root   html;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        index  index.html index.htm;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    }")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("location语法说明\n1、"),n("code",[t._v(">=")]),t._v(":用于不含正则表达式的url前，要求字符串与url严格匹配，匹配成功就停止向下搜索并处理请求\n2、"),n("code",[t._v("~")]),t._v("：用于表示url包含正则表达式，并且区分大小写。\n3、"),n("code",[t._v("~*")]),t._v("：用于表示url包含正则表达式，并且不区分大瞎写\n4、"),n("code",[t._v("^~")]),t._v("：用于不含正则表达式的url前，要求ngin服务器找到表示url和字符串匹配度最高的location后，立即使用此location处理请求，而不再匹配\n5、如果有url包含正则表达式，不需要有"),n("code",[t._v("~")]),t._v("开头标识")])]),t._v(" "),n("h5",{attrs:{id:"_5、其他配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、其他配置"}},[t._v("#")]),t._v(" 5、其他配置")]),t._v(" "),n("ul",[n("li",[t._v("屏蔽版本")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    Server_tokens off"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("反向代理：")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以下配置追加在HTTP的全局变量中")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx跟后端服务器连接超时时间(代理连接超时)")]),t._v("\nproxy_connect_timeout      5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端服务器数据回传时间(代理发送超时)")]),t._v("\nproxy_send_timeout         5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接成功后，后端服务器响应时间(代理接收超时)")]),t._v("\nproxy_read_timeout         60"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置代理服务器（nginx）保存用户头信息的缓冲区大小")]),t._v("\nproxy_buffer_size          16k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置")]),t._v("\nproxy_buffers              4 32k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#高负荷下缓冲大小（proxy_buffers*2）")]),t._v("\nproxy_busy_buffers_size    64k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定缓存文件夹大小，大于这个值，将从upstream服务器传")]),t._v("\nproxy_temp_file_write_size 64k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#反向代理缓存目录")]),t._v("\nproxy_cache_path "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("proxy"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("cache levels=1:2 keys_zone=cache_one:500m inactive=1d max_size=1g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#levels=1:2 设置目录深度，第一层目录是1个字符，第2层是2个字符")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#keys_zone:设置web缓存名称和内存缓存空间大小")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#inactive:自动清除缓存文件时间。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#max_size:硬盘空间最大可使用值。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定临时缓存文件的存储路径(路径需和上面路径在同一分区)")]),t._v("\nproxy_temp_path "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("proxy"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("temp\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 服务配置")]),t._v("\nserver "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#侦听的80端口")]),t._v("\n    listen       80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name  localhost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#代理设置")]),t._v("\n        proxy_pass   http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("IP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重定向")]),t._v("\n        proxy_redirect off"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#反向代理缓存设置命令(proxy_cache zone|off,默认关闭所以要设置)")]),t._v("\n        proxy_cache cache_one"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对不同的状态码缓存不同时间")]),t._v("\n        proxy_cache_valid 200 304 12h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置以什么样参数获取缓存文件名")]),t._v("\n        proxy_cache_key "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$is_args")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$args")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后7端的Web服务器可以通过X-Forwarded-For获取用户真实IP")]),t._v("\n        proxy_set_header Host "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_set_header X-Real-IP $remote_addr; ")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   ")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#文件过期时间控制")]),t._v("\n        expires    1d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置手动清楚缓存(实现此功能需第三方模块 ngx_cache_purge)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#http://www.123.com/2017/0316/17.html访问")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#http://www.123.com/purge/2017/0316/17.html清楚URL缓存")]),t._v("\n    location ~ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("purge"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        allow    127"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        deny    all"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        proxy_cache_purge    cache_one    "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$is_args")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$args")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置扩展名以.jsp、.php、.jspx结尾的动态应用程序不做缓存")]),t._v("\n    location ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\\"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("php"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("jspx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("?$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        proxy_set_header Host "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        proxy_set_header X"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Real"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        proxy_set_header X"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Forwarded"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n        proxy_pass http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("IP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("Nignx状态监控：")])]),t._v(" "),n("div",{staticClass:"language-POWERSHELL extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Nginx运行状态，StubStatus模块获取Nginx自启动的工作状态（编译时要开启对应功能）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location /NginxStatus {")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    #启用StubStatus的工作访问状态    ")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    stub_status    on;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    #指定StubStaus模块的访问日志文件")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    access_log    logs/Nginxstatus.log;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    #Nginx认证机制（需Apache的htpasswd命令生成）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#    #auth_basic    "NginxStatus";')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    #用来认证的密码文件")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    #auth_basic_user_file    ../htpasswd;    ")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n访问：http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("IP"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("NginxStatus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("测试就不加密码验证相关"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),n("ul",[n("li",[t._v("对请求、连接的限制：")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#限制IP访问")]),t._v("\nhttp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlimit_conn_zone "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$binary_remote_addr")]),t._v(" zone=conn_zone:10m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    limit_req_zone "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$binary_remote_addr")]),t._v(" zone=req_zone:10m rate=1r"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  \t\tlocation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("download"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tlimit_rate 500k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \tlimit_rate_after 50m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \tlimit_conn conn_zone 1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \tlimit_req zone=req_zone burst=5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启nodelay，则超过rate=1r/s的请求直接返回503")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#limit_req zone=req_zone burst=5 nodelay;")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("可使用"),n("code",[t._v("ab")]),t._v("命令测试")])]),t._v(" "),n("ul",[n("li",[t._v("负载均衡:")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#负载均衡服务器池")]),t._v("\nupstream my_server_pool "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#调度算法")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1.Round Robin 轮循（默认）（weight轮循权值，值越大被分配到的概率越大）")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2.least_conn 最少的活动连接数请求;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3.ip_hash：根据每个请求访问IP的hash结果分配。（该方法保证来自相同地址的请求到达相同的服务器，除非该服务器不可用。即会话保持）")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4.Generic Hash: 由用户定义的键决定，该键可以是文本字符串、变量或组合。(例：hash $request_uri consistent;)")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5.fair:根据后端服务器响应时间最短请求。（upstream_fair模块）")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6.url_hash:根据访问的url的hash结果分配。（需hash软件包）")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#参数：")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#down：表示不参与负载均衡；backup:备份服务器")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#max_fails:允许最大请求错误次数；fail_timeout:请求失败后暂停服务时间；max_conns:最大链接数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("####least_conn；")]),t._v("\n    server 192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("109:80 weight=1 max_fails=2 fail_timeout=30"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server 192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("108:80 weight=2 max_fails=2 fail_timeout=30"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##多个服务")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#upstream my_server2 {")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\t...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#负载均衡调用")]),t._v("\nserver "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           root        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义服务器的默认网站根目录位置")]),t._v("\n           index       index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义首页索引文件的名称")]),t._v("\n           \n    \t   proxy_pass http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("my_server_pool"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t\n    \t   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以下是一些反向代理的配置(可选择性配置)")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_redirect off;")]),t._v("\n           proxy_set_header Host "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           proxy_set_header X"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Real"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP")]),t._v("\n           proxy_set_header X"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Forwarded"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("For")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           proxy_connect_timeout 90"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx跟后端服务器连接超时时间(代理连接超时)")]),t._v("\n           proxy_send_timeout 90"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端服务器数据回传时间(代理发送超时)")]),t._v("\n           proxy_read_timeout 90"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接成功后，后端服务器响应时间(代理接收超时)")]),t._v("\n           proxy_buffer_size 4k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置代理服务器（nginx）保存用户头信息的缓冲区大小")]),t._v("\n           proxy_buffers 4 32k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置")]),t._v("\n           proxy_busy_buffers_size 64k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#高负荷下缓冲大小（proxy_buffers*2）")]),t._v("\n           proxy_temp_file_write_size 64k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定缓存文件夹大小，大于这个值，将从upstream服务器传")]),t._v("\n           \n           client_max_body_size 10m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#允许客户端请求的最大单文件字节数")]),t._v("\n           client_body_buffer_size 128k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#缓冲区代理缓冲用户端请求的最大字节数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location /product {")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       proxy_pass http://my_server2;")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("简易形式：")]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("upstream myapp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    server 192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("111:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用服务器1")]),t._v("\n    server 192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("112:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用服务器2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nserver "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen 80"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        proxy_pass http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("myweb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("URL重写:")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#根据不同的浏览器URL重写,tag值有：break，last（会实现一次跳转，break不会），redirect（零时302）、permanent（永久301）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#浏览器是Firefox类型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v(" ~ Firefox"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\trewrite ^"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("firefox"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v(" ~ MSIE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\trewrite ^"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("msie"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实现域名跳转")]),t._v("\nlocation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rewrite ^"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ https:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("web8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" permanent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实现文件读取(文件路径： /course/../..)")]),t._v("\nlocation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\trewrite ^"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("course"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\d"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\d"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\d"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\\"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html$ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("course"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("course_"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("IP限制:")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#限制IP访问")]),t._v("\nlocation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    deny 192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2；\n    allow 192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("24"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    allow 192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#allow all;")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#deny all;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("返回 json")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    default_type application"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("json"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 200 "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"status":"success"}\'')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("防盗链设置：")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#限制IP访问")]),t._v("\nlocation ~ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\\"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v("xml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    valid_references none blocked 192"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("1 ~"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("google\\"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$valid_references")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 403"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    root "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("opt"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("测试:"),n("code",[t._v('curl -e "www.baidu.com" -I http://192.168.0.1/1.jpg')]),t._v(" 和  "),n("code",[t._v("curl http://192.168.0.1/1.jpg")])])]),t._v(" "),n("ul",[n("li",[t._v("跨域设置：新建 enable-cors.conf 配置文件，然后在 server 对应的 location 中涌入该配置文件即可")])]),t._v(" "),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#enable-cors.conf")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# allow origin list")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ACAO")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# set single origin")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_origin")]),t._v(" ~"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("helloworld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ACAO")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_origin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$cors")]),t._v(" = "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trueget"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   add_header "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Origin'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_origin")]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   add_header "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Credentials'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   add_header "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Methods'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET, POST, OPTIONS'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   add_header "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Access-Control-Allow-Headers'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_method")]),t._v(" = "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OPTIONS'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$cors")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${cors}options"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_method")]),t._v(" = "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$cors")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${cors}get"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_method")]),t._v(" = "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'POST'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$cors")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${cors}post"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-powershell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-powershell"}},[n("code",[t._v("server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##反向代理(服务端跳转)")]),t._v("\n location ~ ^"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   include "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("enable-cors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#引入上面文件")]),t._v("\n   proxy_pass http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api_server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   rewrite "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^/api/(.*)$"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#location ~ /test.html$ {")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   proxy_pass http://118.24.32.168:8080;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# }")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##正向代理(客户端转发)")]),t._v("\nlocation ~ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   proxy_pass http:"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("配置完后，进入nginx默认安装目录（./sbin/nginx），找不到可以输入whereis ngingx进行范围查找；\n进入安装目录后，可以pkill nginx杀死改进程，然后在nginx启动。\n为了确保启动正常，可以lsof  -i:端口号，看端口是否被占用。")]),t._v(" "),n("p",[t._v("以上操作都正确后，如果还不能访问，可以telnet一下端口，看端口是否启动正常，如不能telnet，可能是防火墙问题，需开放该端口")]),t._v(" "),n("p",[t._v("补充：\n1、"),n("code",[t._v("alias")]),t._v("和"),n("code",[t._v("root")]),t._v("的区别：")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方式1")]),t._v("\nlocation /request_path/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\troot /local_path/image/;\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方式2")]),t._v("\nlocation /request_path/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\talias /local_path/image/;\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("code",[t._v("http://www.imooc.com/request_path/a.jpg")]),t._v("\n方式1结果："),n("code",[t._v("/local_path/request_path/image/a.jpg")]),t._v("\n方式2结果："),n("code",[t._v("/local_path/image/a.jpg")])]),t._v(" "),n("p",[t._v("2、ab接口压力测试工具：\n"),n("code",[t._v("yum install httpd-tools")]),t._v(" ，使用："),n("code",[t._v("ab -n 2000 -c 10 http://127.0.0.1/")]),t._v("  -n 表示请求数、-c 并发数、-k 是否开启长链接")]),t._v(" "),n("p",[t._v("3、cpu亲和")]),t._v(" "),n("p",[n("code",[t._v('查看有几个cpu：cat /proc/cpuinfo|grep "physical id"|sort|uniq|wc -l')])]),t._v(" "),n("p",[t._v("nginx设置属性"),n("code",[t._v("worker_cpu_affinity")]),t._v("和"),n("code",[t._v("worker_processes")])]),t._v(" "),n("p",[t._v("查看cpu的占用："),n("code",[t._v("ps -eo pid,args,psr | grep [n]ginx")])]),t._v(" "),n("p",[t._v("4、Sql注入")]),t._v(" "),n("p",[t._v("方式1（推荐）：用户名username输入值："),n("code",[t._v("'or 1=1 #")]),t._v("，密码password随意填，返回登陆成功。")]),t._v(" "),n("p",[t._v("sql语句为："),n("code",[t._v("select * from users where username='' or 1=1#' and password =md5('')")]),t._v("等价于"),n("code",[t._v("select * from users where username='' or 1=1")])]),t._v(" "),n("blockquote",[n("p",[t._v("符号的作用是去除最后的where语句，使其不起作用")])]),t._v(" "),n("p",[t._v("方式2（不推荐）：用户名username随便输，密码password输入值："),n("code",[t._v("'or''='")]),t._v("，返回登陆成功。\n换言之，获取username的语句为(前台输入)："),n("code",[t._v("1' OR '1'='1")]),t._v(" ，获取password的语句(前台输入)："),n("code",[t._v("'or''='")])])])}),[],!1,null,null,null);s.default=e.exports}}]);