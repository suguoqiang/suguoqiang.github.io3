(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{581:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("blockquote",[s("p",[t._v("由于RabbitMQ依赖Erlang， 所以需要先安装Erlang。")])]),t._v(" "),s("h4",{attrs:{id:"_1、下载并安装-erlang。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、下载并安装-erlang。"}},[t._v("#")]),t._v(" 1、下载并安装 Erlang。")]),t._v(" "),s("p",[t._v("Erlang下载地址：http://www.erlang.org/downloads")]),t._v(" "),s("p",[t._v("双击.exe文件进行安装就好。 配置ERLANG_HOME的环境变量，指向erlang的安装目录，同时将%ERLANG_HOME%\\bin加入到Path 中。输入erl验证安装是否成功。")]),t._v(" "),s("h4",{attrs:{id:"_2、下载并安装-rabbitmq-server。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、下载并安装-rabbitmq-server。"}},[t._v("#")]),t._v(" 2、下载并安装 RabbitMQ Server。")]),t._v(" "),s("p",[t._v("RabbitMQ下载地址：http://www.rabbitmq.com/download.html")]),t._v(" "),s("p",[t._v("开启web管理控制台:")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("$ cd ~"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("sbin\n$ rabbitmq"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("plugins enable rabbitmq_management\n")])])]),s("blockquote",[s("p",[t._v("若启动失败，注意版本冲突：3.7.6对应erl版本19.3。")])]),t._v(" "),s("p",[t._v("然后通过浏览器访问：http://localhost:15672.(默认用户名：guest，密码：guest)\n"),s("img",{attrs:{src:"http://cdn.gqsu.top/rabbit-01.png",alt:""}}),t._v(" "),s("img",{attrs:{src:"http://cdn.gqsu.top/rabbit-02.png",alt:""}})]),t._v(" "),s("blockquote",[s("p",[t._v("页面无法打开的话，一定要注意是否完全卸载原有rabbitmq，在安装。（删除C:\\Users\\gqsu\\AppData\\Roaming\\RabbitMQ\\ 下全部文件）")])]),t._v(" "),s("h3",{attrs:{id:"一些基本命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些基本命令"}},[t._v("#")]),t._v(" 一些基本命令")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("$ chkconfig rabbitmq"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server on  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加开机启动RabbitMQ服务")]),t._v("\n$ cd ~"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("sbin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("service\n$ rabbitmq"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动服务")]),t._v("\n$ rabbitmq"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server status  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看服务状态")]),t._v("\n$ rabbitmq"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server stop   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止服务")]),t._v("\n")])])]),s("h4",{attrs:{id:"查看当前所有用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看当前所有用户"}},[t._v("#")]),t._v(" 查看当前所有用户")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("$ rabbitmqctl list_users\n")])])]),s("h4",{attrs:{id:"查看默认guest用户的权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看默认guest用户的权限"}},[t._v("#")]),t._v(" 查看默认guest用户的权限")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("$ rabbitmqctl list_user_permissions guest\n")])])]),s("h4",{attrs:{id:"由于rabbitmq默认的账号用户名和密码都是guest。为了安全起见-先删掉默认用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#由于rabbitmq默认的账号用户名和密码都是guest。为了安全起见-先删掉默认用户"}},[t._v("#")]),t._v(" 由于RabbitMQ默认的账号用户名和密码都是guest。为了安全起见, 先删掉默认用户")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("$ rabbitmqctl delete_user guest\n")])])]),s("h4",{attrs:{id:"添加新用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加新用户"}},[t._v("#")]),t._v(" 添加新用户")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("$ rabbitmqctl add_user username password\n")])])]),s("h4",{attrs:{id:"设置用户tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置用户tag"}},[t._v("#")]),t._v(" 设置用户tag")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("$ rabbitmqctl set_user_tags username administrator\n")])])]),s("h4",{attrs:{id:"赋予用户默认vhost的全部操作权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋予用户默认vhost的全部操作权限"}},[t._v("#")]),t._v(" 赋予用户默认vhost的全部操作权限")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("$ rabbitmqctl set_permissions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" username "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".*"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".*"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".*"')]),t._v("\n")])])]),s("h4",{attrs:{id:"查看用户的权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看用户的权限"}},[t._v("#")]),t._v(" 查看用户的权限")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("$ rabbitmqctl list_user_permissions username\n")])])]),s("h4",{attrs:{id:"查看服务状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看服务状态"}},[t._v("#")]),t._v(" 查看服务状态")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("$ cd ~"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("sbin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("service \n$ rabbitmq"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server status  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看服务状态")]),t._v("\n")])])]),s("h3",{attrs:{id:"开启用户远程访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开启用户远程访问"}},[t._v("#")]),t._v(" 开启用户远程访问")]),t._v(" "),s("p",[t._v("默认情况下，RabbitMQ的默认的guest用户只允许本机访问， 如果想让guest用户能够远程访问的话，只需要将配置文件中的loopback_users列表置为空即可，如下：\n"),s("code",[t._v("{loopback_users, []}")])]),t._v(" "),s("p",[t._v("另外关于新添加的用户，直接就可以从远程访问的，如果想让新添加的用户只能本地访问，可以将用户名添加到上面的列表, 如只允许admin用户本机访问。\n"),s("code",[t._v('{loopback_users, ["admin"]}')])]),t._v(" "),s("p",[t._v("更新配置后，别忘了重启服务哦！")]),t._v(" "),s("p",[t._v("可能还需要开启端口：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/sbin/iptables -I INPUT -p tcp --dport 5672 -j ACCEPT  \n/sbin/iptables -I INPUT -p tcp --dport 15672 -j ACCEPT  \n")])])]),s("h4",{attrs:{id:"消息中间键的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息中间键的优缺点"}},[t._v("#")]),t._v(" 消息中间键的优缺点")]),t._v(" "),s("p",[t._v("优点：解耦、异步，削峰。总的来说就是提高可扩展性，响应速度和系统的并发性。")]),t._v(" "),s("p",[t._v("缺点：1、增加了系统的复杂性 ； 2、降低了系统的可用性。3、系统一致性问题。")]),t._v(" "),s("p",[t._v("具体来说，可以描述为：")]),t._v(" "),s("p",[t._v("案例1（"),s("strong",[t._v("解耦")]),t._v("）：A 系统发送数据到 BCD 三个系统，通过接口调用发送。如果 E 系统也要这个数据呢？那如果 C 系统现在不需要了呢？A 系统负责人几乎崩溃.....。如果"),s("strong",[t._v("使用 MQ")]),t._v("，A 系统产生一条数据，发送到 MQ 里面去，哪个系统需要数据自己去 MQ 里面消费。如果新系统需要数据，直接从 MQ 里消费即可；如果某个系统不需要这条数据了，就取消对 MQ 消息的消费即可。这样下来，A 系统压根儿不需要去考虑要给谁发送数据，不需要维护这个代码，也不需要考虑人家是否调用成功、失败超时等情况。通过一个 MQ，Pub/Sub 发布订阅消息这么一个模型，A 系统就跟其它系统彻底解耦了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://cdn.gqsu.top/mq-2.png",alt:""}})]),t._v(" "),s("p",[t._v("案例2（"),s("strong",[t._v("异步")]),t._v("）：再来看一个场景，A 系统接收一个请求，需要在自己本地写库，还需要在 BCD 三个系统写库，自己本地写库要 3ms，BCD 三个系统分别写库要 300ms、450ms、200ms。最终请求总延时是 3 + 300 + 450 + 200 = 953ms，接近 1s，用户感觉搞个什么东西，慢死了慢死了。用户通过浏览器发起请求，等待个 1s，这几乎是不可接受的。一般要求控制在200 ms 以内。如果"),s("strong",[t._v("使用 MQ")]),t._v("，那么 A 系统连续发送 3 条消息到 MQ 队列中，假如耗时 5ms，A 系统从接受一个请求到返回响应给用户，总时长是 3 + 5 = 8ms，对于用户而言，其实感觉上就是点个按钮，8ms 以后就直接返回了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://cdn.gqsu.top/mq-4.png",alt:""}})]),t._v(" "),s("p",[t._v("案例3（"),s("strong",[t._v("削峰")]),t._v("）：每天 0:00 到 12:00，A 系统风平浪静，每秒并发请求数量就 50 个。结果每次一到 12:00 ~ 13:00 ，每秒并发请求数量突然会暴增到 5k+ 条。但是系统是直接基于 MySQL 的，大量的请求涌入 MySQL，每秒钟对 MySQL 执行约 5k 条 SQL。一般的 MySQL，扛到每秒 2k 个请求就差不多了，如果每秒请求到 5k 的话，可能就直接把 MySQL 给打死了，导致系统崩溃，用户也就没法再使用系统了。但是高峰期一过，到了下午的时候，就成了低峰期，可能也就 1w 的用户同时在网站上操作，每秒中的请求数量可能也就 50 个请求，对整个系统几乎没有任何的压力。如果"),s("strong",[t._v("使用 MQ")]),t._v("，每秒 5k 个请求写入 MQ，A 系统每秒钟最多处理 2k 个请求，因为 MySQL 每秒钟最多处理 2k 个。A 系统从 MQ 中慢慢拉取请求，每秒钟就拉取 2k 个请求，不要超过自己每秒能处理的最大请求数量就 ok，这样下来，哪怕是高峰期的时候，A 系统也绝对不会挂掉。而 MQ 每秒钟 5k 个请求进来，就 2k 个请求出去，结果就导致在中午高峰期（1 个小时），可能有几十万甚至几百万的请求积压在 MQ 中。这个短暂的高峰期积压是 ok 的，因为高峰期过了之后，每秒钟就 50 个请求进 MQ，但是 A 系统依然会按照每秒 2k 个请求的速度在处理。所以说，只要高峰期一过，A 系统就会快速将积压的消息给解决掉。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://cdn.gqsu.top/mq-6.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"消息中间键如何选型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息中间键如何选型"}},[t._v("#")]),t._v(" 消息中间键如何选型")]),t._v(" "),s("p",[t._v("中小公司推荐使用rabbitmq，大公司推荐使用rocketmq和kafka。")]),t._v(" "),s("h4",{attrs:{id:"如何保证消息的高可用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何保证消息的高可用"}},[t._v("#")]),t._v(" 如何保证消息的高可用")]),t._v(" "),s("p",[t._v("集群（基于主从架构实现）。以rabbitmq为例，采用多master多slave模式部署架构。生产者将消息发布到主服务器上，消费者订阅主服务器和从服务器上的消息。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://cdn.gqsu.top/mq-8.png",alt:""}}),t._v("\n实际上 RabbmitMQ 之类的，并不是分布式消息队列，它就是传统的消息队列，只不过提供了一些集群、HA(High Availability, 高可用性) 的机制而已，因为无论怎么玩儿，RabbitMQ 一个 queue 的数据都是放在一个节点里的，镜像集群下，也是每个节点都放这个 queue 的完整数据。而 kafka 才是天然的分布式消息队列，就是说一个 topic 的数据，是分散放在多个机器上的，每个机器就放一部分数据。\n"),s("img",{attrs:{src:"http://cdn.gqsu.top/kafka-after.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"如何保证消息的重复消费-如何保证消息消费的幂等性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何保证消息的重复消费-如何保证消息消费的幂等性"}},[t._v("#")]),t._v(" 如何保证消息的重复消费(如何保证消息消费的幂等性)")]),t._v(" "),s("p",[t._v("保存消息的唯一属性。数据库中可以插入数据，保存唯一id；redis中设置set，保证消费过的不会重复消费。")]),t._v(" "),s("p",[t._v("Kafka 实际上有个 offset 的概念，就是每个消息写进去，都有一个 offset，代表消息的序号，然后 consumer 消费了数据之后，"),s("strong",[t._v("每隔一段时间")]),t._v("（定时定期），会把自己消费过的消息的 offset 提交一下，表示“我已经消费过了，下次我要是重启啥的，你就让我继续从上次消费到的 offset 来继续消费吧”。但在意外宕机或故障时，任然会有问题。")]),t._v(" "),s("h4",{attrs:{id:"如何保证消息的可靠传输"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何保证消息的可靠传输"}},[t._v("#")]),t._v(" 如何保证消息的可靠传输")]),t._v(" "),s("p",[t._v("数据的丢失问题: "),s("img",{attrs:{src:"http://cdn.gqsu.top/rabbitmq-message-lose.png",alt:""}})]),t._v(" "),s("p",[t._v("1）生产者：开启事物机制，发送后等待中间键的消息回执。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开启事务")]),t._v("\nchannel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txSelect\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里发送消息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    channel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txRollback\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里再次重发这条消息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提交事务")]),t._v("\nchannel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txCommit\n")])])]),s("p",[t._v("但是，这种方式会增加吞吐量，降低性能。一般，生产者这块避免数据丢失，都是用 confirm 机制的。即，每次写的消息都会分配一个唯一的 id，然后如果写入了 RabbitMQ 中，RabbitMQ 会给你回传一个 ack 消息，否则给你返回 nack。若超时还未收到RabbitMQ的消息，会重发。confirm 机制区别于事物机制，它是异步的，不会造成阻塞。https://www.cnblogs.com/yangxijun/p/12570828.html")]),t._v(" "),s("p",[t._v("2）消息中间键的持久化处理：\n1.将queue的持久化标识"),s("code",[t._v("durable")]),t._v("设置为"),s("code",[t._v("true")]),t._v(",则代表是一个持久的队列queue。\n2.发送消息的时候将"),s("code",[t._v("deliveryMode=2")]),t._v(",表示消息需要持久化到磁盘上。")]),t._v(" "),s("p",[t._v("3）消费者：关闭自动确认消息模式。手动完成 ack 回调。\n"),s("img",{attrs:{src:"http://cdn.gqsu.top/rabbitmq-message-lose-solution.png",alt:""}})]),t._v(" "),s("blockquote",[s("p",[t._v("关于kafka了解即可，于此类似：\n1.给 topic 设置 "),s("code",[t._v("replication.factor")]),t._v(" 参数：这个值必须大于 1，要求每个 partition 必须有至少 2 个副本。\n2.在 Kafka 服务端设置 "),s("code",[t._v("min.insync.replicas")]),t._v(" 参数：这个值必须大于 1，这个是要求一个 leader 至少感知到有至少一个 follower 还跟自己保持联系，没掉队，这样才能确保 leader 挂了还有一个 follower 吧。\n3.在 producer 端设置 "),s("code",[t._v("acks=all")]),t._v("：这个是要求每条数据，必须是写入所有 replica 之后，才能认为是写成功了。\n4.在 producer 端设置 "),s("code",[t._v("retries=MAX")]),t._v("（很大很大很大的一个值，无限次重试的意思）：这个是要求一旦写入失败，就无限重试，卡在这里了。")])]),t._v(" "),s("h4",{attrs:{id:"如何保证消息的顺序性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何保证消息的顺序性"}},[t._v("#")]),t._v(" 如何保证消息的顺序性")]),t._v(" "),s("p",[s("strong",[t._v("RabbitMQ")]),t._v("：一个 queue，多个 consumer。比如，生产者向 RabbitMQ 里发送了三条数据，顺序依次是 data1/data2/data3，压入的是 RabbitMQ 的一个内存队列。有三个消费者分别从 MQ 中消费这三条数据中的一条，结果消费者2先执行完操作，把 data2 存入数据库，然后是 data1/data3。这不明显乱了。")]),t._v(" "),s("blockquote",[s("p",[t._v("拆分多个 queue，每个 queue 一个 consumer，就是多一些 queue 而已，确实是麻烦点；或者就一个 queue 但是对应一个 consumer，然后这个 consumer 内部用内存队列做排队，然后分发给底层不同的 worker 来处理。 推荐采用一个 queue 对应一个 consumer 来解决。\n"),s("img",{attrs:{src:"http://cdn.gqsu.top/rabbitmq-order-02.png",alt:""}})])]),t._v(" "),s("p",[s("strong",[t._v("Kafka")]),t._v("：比如说我们建了一个 topic，有三个 partition。生产者在写的时候，其实可以指定一个 key，比如说我们指定了某个订单 id 作为 key，那么这个订单相关的数据，一定会被分发到同一个 partition 中去，而且这个 partition 中的数据一定是有顺序的。\n消费者从 partition 中取出来数据的时候，也一定是有顺序的。到这里，顺序还是 ok 的，没有错乱。接着，我们在消费者里可能会搞多个线程来并发处理消息。因为如果消费者是单线程消费处理，而处理比较耗时的话，比如处理一条消息耗时几十 ms，那么 1 秒钟只能处理几十条消息，这吞吐量太低了。而多个线程并发跑的话，顺序可能就乱掉了。")]),t._v(" "),s("blockquote",[s("p",[t._v("一个 topic，一个 partition，一个 consumer，内部单线程消费，单线程吞吐量太低，一般不会用这个。\n写 N 个内存 queue，具有相同 key 的数据都到同一个内存 queue；然后对于 N 个线程，每个线程分别消费一个内存 queue 即可，这样就能保证顺序性。\n"),s("img",{attrs:{src:"http://cdn.gqsu.top/kafka-order-02.png",alt:""}})])]),t._v(" "),s("h4",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),s("p",[t._v("如何解决消息队列的延时以及过期失效问题？消息队列满了以后该怎么处理？怎么处理几百万消息持续积压几小时？")]),t._v(" "),s("p",[t._v("数据积压问题解决，零时征用 10 倍的机器来部署 consumer，每一批 consumer 消费一个临时 queue 的数据。待消费完积压数据之后，恢复原先部署的架构，重新消费。")]),t._v(" "),s("p",[t._v("消息过期失效问题解决，RabbtiMQ 设置了过期时间 TTL，长时间未进行消费，造成部分数据的丢失。采取的方法就是批量重导，手动把丢失的数据补回来，放入Rabbitmq中。")]),t._v(" "),s("p",[t._v("消息满队列问题解决，临时写程序，接入数据来消费。")]),t._v(" "),s("h5",{attrs:{id:"最后-贴表一张"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最后-贴表一张"}},[t._v("#")]),t._v(" 最后，贴表一张：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特性")]),t._v(" "),s("th",[t._v("ActiveMQ")]),t._v(" "),s("th",[t._v("RabbitMQ")]),t._v(" "),s("th",[t._v("RocketMQ")]),t._v(" "),s("th",[t._v("Kafka")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("单机吞吐量")]),t._v(" "),s("td",[t._v("万级，比 RocketMQ、Kafka 低一个数量级")]),t._v(" "),s("td",[t._v("同 ActiveMQ")]),t._v(" "),s("td",[t._v("10 万级，支撑高吞吐")]),t._v(" "),s("td",[t._v("10 万级，高吞吐，一般配合大数据类的系统来进行实时数据计算、日志采集等场景")])]),t._v(" "),s("tr",[s("td",[t._v("topic 数量对吞吐量的影响")]),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("topic 可以达到几百/几千的级别，吞吐量会有较小幅度的下降，这是 RocketMQ 的一大优势，在同等机器下，可以支撑大量的 topic")]),t._v(" "),s("td",[t._v("topic 从几十到几百个时候，吞吐量会大幅度下降，在同等机器下，Kafka 尽量保证 topic 数量不要过多，如果要支撑大规模的 topic，需要增加更多的机器资源")])]),t._v(" "),s("tr",[s("td",[t._v("时效性")]),t._v(" "),s("td",[t._v("ms 级")]),t._v(" "),s("td",[t._v("微秒级，这是 RabbitMQ 的一大特点，延迟最低")]),t._v(" "),s("td",[t._v("ms 级")]),t._v(" "),s("td",[t._v("延迟在 ms 级以内")])]),t._v(" "),s("tr",[s("td",[t._v("可用性")]),t._v(" "),s("td",[t._v("高，基于主从架构实现高可用")]),t._v(" "),s("td",[t._v("同 ActiveMQ")]),t._v(" "),s("td",[t._v("非常高，分布式架构")]),t._v(" "),s("td",[t._v("非常高，分布式，一个数据多个副本，少数机器宕机，不会丢失数据，不会导致不可用")])]),t._v(" "),s("tr",[s("td",[t._v("消息可靠性")]),t._v(" "),s("td",[t._v("有较低的概率丢失数据")]),t._v(" "),s("td",[t._v("基本不丢")]),t._v(" "),s("td",[t._v("经过参数优化配置，可以做到 0 丢失")]),t._v(" "),s("td",[t._v("同 RocketMQ")])]),t._v(" "),s("tr",[s("td",[t._v("功能支持")]),t._v(" "),s("td",[t._v("MQ 领域的功能极其完备")]),t._v(" "),s("td",[t._v("基于 erlang 开发，并发能力很强，性能极好，延时很低")]),t._v(" "),s("td",[t._v("MQ 功能较为完善，还是分布式的，扩展性好")]),t._v(" "),s("td",[t._v("功能较为简单，主要支持简单的 MQ 功能，在大数据领域的实时计算以及日志采集被大规模使用")])])])]),t._v(" "),s("h4",{attrs:{id:"队列模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列模式"}},[t._v("#")]),t._v(" 队列模式")]),t._v(" "),s("p",[t._v("Queue——简单队列\nWork queue——Work模式\nPublish/Subscribe——发布/订阅者模式\nRouting——路由模式\nTopics——通配符模式")]),t._v(" "),s("h4",{attrs:{id:"两种协议方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两种协议方式"}},[t._v("#")]),t._v(" 两种协议方式")]),t._v(" "),s("p",[t._v("rabbitmq有两种协议，我们平时接触的消息队列是用的"),s("code",[t._v("AMQP")]),t._v("协议，而用在智能硬件中的是"),s("code",[t._v("MQTT")]),t._v("协议。")]),t._v(" "),s("p",[t._v("MQTT 全称(Message Queue Telemetry Transport)：一种基于发布/订阅（publish/subscribe）模式的轻量级通讯协议，通过订阅相应的主题来获取消息，是物联网（Internet of Thing）中的一个标准传输协议。该协议将消息的发布者（publisher）与订阅者（subscriber）进行分离，因此可以在不可靠的网络环境中，为远程连接的设备提供可靠的消息服务，使用方式与传统的MQ有点类似。")]),t._v(" "),s("p",[t._v("TCP协议位于传输层，MQTT 协议位于应用层，MQTT 协议构建于TCP/IP协议上，也就是说只要支持TCP/IP协议栈的地方，都可以使用MQTT协议.")]),t._v(" "),s("p",[t._v("MQQ协议与HTTP协议的区别：")]),t._v(" "),s("ul",[s("li",[t._v("首先HTTP协议它是一种同步协议，客户端请求后需要等待服务器的响应。而在物联网（IOT）环境中，设备会很受制于环境的影响，比如带宽低、网络延迟高、网络通信不稳定等，显然异步消息协议更为适合IOT应用程序。\n-MHTTP是单向的，如果要获取消息客户端必须发起连接，而在物联网（IOT）应用程序中，设备或传感器往往都是客户端，这意味着它们无法被动地接收来自网络的命令。")]),t._v(" "),s("li",[t._v("通常需要将一条命令或者消息，发送到网络上的所有设备上。HTTP要实现这样的功能不但很困难，而且成本极高。")])]),t._v(" "),s("p",[t._v("应用场景：")]),t._v(" "),s("ul",[s("li",[t._v("物联网M2M通信，物联网大数据采集")]),t._v(" "),s("li",[t._v("Android消息推送，WEB消息推送")]),t._v(" "),s("li",[t._v("移动即时消息，例如Facebook Messenger")]),t._v(" "),s("li",[t._v("智能硬件、智能家具、智能电器")]),t._v(" "),s("li",[t._v("车联网通信，电动车站桩采集")]),t._v(" "),s("li",[t._v("智慧城市、远程医疗、远程教育")]),t._v(" "),s("li",[t._v("电力、石油与能源等行业市场")])]),t._v(" "),s("p",[t._v("代码实现：\n1、启用 rabbitmq的mqtt协议")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[t._v("rabbitmq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("plugins enable rabbitmq_mqtt\n")])])]),s("p",[t._v("2、依赖包：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--mqtt依赖包--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.integration"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-integration-mqtt"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.eclipse.paho"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.eclipse.paho.client.mqttv3"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.2.0"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("3、消息发送者：\n"),s("code",[t._v("@ServiceActivator")]),t._v("注解表明当前方法用于处理"),s("code",[t._v("MQTT")]),t._v("消息，"),s("code",[t._v("inputChannel")]),t._v(" 参数指定了用于接收消息的"),s("code",[t._v("channel")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-JAVA extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IotMqttProducerConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MqttConfig")]),t._v(" mqttConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MqttPahoClientFactory")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mqttClientFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMqttPahoClientFactory")]),t._v(" factory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMqttPahoClientFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setServerURIs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mqttConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageChannel")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mqttOutboundChannel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectChannel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ServiceActivator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputChannel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iotMqttInputChannel"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mqttOutbound")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MqttPahoMessageHandler")]),t._v(" messageHandler "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MqttPahoMessageHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mqttConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServerClientId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mqttClientFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//关闭异步模式发送消息时可能会阻塞")]),t._v("\n        messageHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        messageHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDefaultTopic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mqttConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDefaultTopic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" messageHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("MQTT")]),t._v(" 对外提供发送消息的API时，需要使用"),s("code",[t._v("@MessagingGateway")]),t._v(" 注解，去提供一个消息网关代理，参数"),s("code",[t._v("defaultRequestChannel")]),t._v(" 指定发送消息绑定的"),s("code",[t._v("channel")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MessagingGateway")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("defaultRequestChannel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iotMqttInputChannel"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IotMqttGateway")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向默认的 topic 发送消息")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage2Mqtt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向指定的 topic 发送消息")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage2Mqtt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MqttHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TOPIC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" topic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向指定的 topic 发送消息，并指定服务质量参数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage2Mqtt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MqttHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TOPIC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" topic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MqttHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QOS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" qos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("4、消息订阅")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IotMqttSubscriberConfig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MqttConfig")]),t._v(" mqttConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MqttPahoClientFactory")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mqttClientFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMqttPahoClientFactory")]),t._v(" factory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMqttPahoClientFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setServerURIs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mqttConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageChannel")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iotMqttInputChannel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DirectChannel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageProducer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inbound")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MqttPahoMessageDrivenChannelAdapter")]),t._v(" adapter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MqttPahoMessageDrivenChannelAdapter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mqttConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClientId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mqttClientFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mqttConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDefaultTopic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        adapter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCompletionTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        adapter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setConverter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultPahoMessageConverter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        adapter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setQos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        adapter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setOutputChannel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iotMqttInputChannel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" adapter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ServiceActivator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputChannel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iotMqttInputChannel"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handlerTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPayload")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"接收到消息："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessagingException")]),t._v(" ex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//logger.info(ex.getMessage());")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("5、测试消息\nmqttbox，下载地址：http://workswithweb.com/mqttbox.html")]),t._v(" "),s("p",[t._v("6、注意点")]),t._v(" "),s("ul",[s("li",[t._v("clientId 要唯一。clientId获取方式换成从发号器中拿")])]),t._v(" "),s("div",{staticClass:"language-SHELL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("MqttPahoMessageDrivenChannelAdapter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mqttConfig.getClientId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", mqttClientFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", mqttConfig.getDefaultTopic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("https://mp.weixin.qq.com/s/cFAjIQYEC1NMIsKELBLFbw")])])}),[],!1,null,null,null);a.default=e.exports}}]);